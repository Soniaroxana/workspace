<?xml version="1.0" encoding="UTF-8"?>
<findings>
  <finding type="CCE_CC_GUARD_USAGE">
    <locations>
      <field className="benchmarks.jgfutil.JGFInstrumentor" name="timers" type="Ljava/util/Hashtable;" key="0" filename="JGFInstrumentor.java" line="28"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimer" offset="2" desc="(Ljava/lang/String;)V" key="1" label="relevant_sync_read" filename="JGFInstrumentor.java" line="43"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimer" offset="2" desc="(Ljava/lang/String;Ljava/lang/String;)V" key="2" label="relevant_sync_read" filename="JGFInstrumentor.java" line="54"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimer" offset="2" desc="(Ljava/lang/String;Ljava/lang/String;I)V" key="3" label="relevant_sync_read" filename="JGFInstrumentor.java" line="66"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="startTimer" offset="2" desc="(Ljava/lang/String;)V" key="4" label="relevant_sync_read" filename="JGFInstrumentor.java" line="77"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="startTimer" offset="6" desc="(Ljava/lang/String;)V" key="5" label="relevant_sync_read" filename="JGFInstrumentor.java" line="78"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="stopTimer" offset="2" desc="(Ljava/lang/String;)V" key="6" label="relevant_sync_read" filename="JGFInstrumentor.java" line="88"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="stopTimer" offset="6" desc="(Ljava/lang/String;)V" key="7" label="relevant_sync_read" filename="JGFInstrumentor.java" line="89"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addOpsToTimer" offset="2" desc="(Ljava/lang/String;D)V" key="8" label="relevant_sync_read" filename="JGFInstrumentor.java" line="98"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addOpsToTimer" offset="6" desc="(Ljava/lang/String;D)V" key="9" label="relevant_sync_read" filename="JGFInstrumentor.java" line="99"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimeToTimer" offset="2" desc="(Ljava/lang/String;D)V" key="10" label="relevant_sync_read" filename="JGFInstrumentor.java" line="108"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimeToTimer" offset="6" desc="(Ljava/lang/String;D)V" key="11" label="relevant_sync_read" filename="JGFInstrumentor.java" line="109"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="readTimer" offset="2" desc="(Ljava/lang/String;)D" key="12" label="relevant_sync_read" filename="JGFInstrumentor.java" line="122"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="readTimer" offset="6" desc="(Ljava/lang/String;)D" key="13" label="relevant_sync_read" filename="JGFInstrumentor.java" line="123"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="resetTimer" offset="2" desc="(Ljava/lang/String;)V" key="14" label="relevant_sync_read" filename="JGFInstrumentor.java" line="134"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="resetTimer" offset="6" desc="(Ljava/lang/String;)V" key="15" label="relevant_sync_read" filename="JGFInstrumentor.java" line="135"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="printTimer" offset="2" desc="(Ljava/lang/String;)V" key="16" label="relevant_sync_read" filename="JGFInstrumentor.java" line="144"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="printTimer" offset="6" desc="(Ljava/lang/String;)V" key="17" label="relevant_sync_read" filename="JGFInstrumentor.java" line="145"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="printperfTimer" offset="2" desc="(Ljava/lang/String;)V" key="18" label="relevant_sync_read" filename="JGFInstrumentor.java" line="154"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="printperfTimer" offset="6" desc="(Ljava/lang/String;)V" key="19" label="relevant_sync_read" filename="JGFInstrumentor.java" line="155"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimer" offset="22" desc="(Ljava/lang/String;)V" key="20" label="relevant_sync_write" filename="JGFInstrumentor.java" line="48"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimer" offset="23" desc="(Ljava/lang/String;Ljava/lang/String;)V" key="21" label="relevant_sync_write" filename="JGFInstrumentor.java" line="59"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="addTimer" offset="24" desc="(Ljava/lang/String;Ljava/lang/String;I)V" key="22" label="relevant_sync_write" filename="JGFInstrumentor.java" line="71"/>
      <class name="benchmarks.jgfutil.JGFInstrumentor" key="23" label="guard" filename="JGFInstrumentor.java"/>
    </locations>
    <info>
      <message value="All accesses to threadsafe collection in field 'timers' are guarded."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="23"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_GUARD_USAGE">
    <locations>
      <field className="jgfutil.JGFInstrumentor" name="timers" type="Ljava/util/Hashtable;" key="0" filename="JGFInstrumentor.java" line="28"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimer" offset="2" desc="(Ljava/lang/String;)V" key="1" label="relevant_sync_read" filename="JGFInstrumentor.java" line="38"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimer" offset="2" desc="(Ljava/lang/String;Ljava/lang/String;)V" key="2" label="relevant_sync_read" filename="JGFInstrumentor.java" line="49"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimer" offset="2" desc="(Ljava/lang/String;Ljava/lang/String;I)V" key="3" label="relevant_sync_read" filename="JGFInstrumentor.java" line="61"/>
      <instruction className="jgfutil.JGFInstrumentor" method="startTimer" offset="2" desc="(Ljava/lang/String;)V" key="4" label="relevant_sync_read" filename="JGFInstrumentor.java" line="72"/>
      <instruction className="jgfutil.JGFInstrumentor" method="startTimer" offset="6" desc="(Ljava/lang/String;)V" key="5" label="relevant_sync_read" filename="JGFInstrumentor.java" line="73"/>
      <instruction className="jgfutil.JGFInstrumentor" method="stopTimer" offset="2" desc="(Ljava/lang/String;)V" key="6" label="relevant_sync_read" filename="JGFInstrumentor.java" line="83"/>
      <instruction className="jgfutil.JGFInstrumentor" method="stopTimer" offset="6" desc="(Ljava/lang/String;)V" key="7" label="relevant_sync_read" filename="JGFInstrumentor.java" line="84"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addOpsToTimer" offset="2" desc="(Ljava/lang/String;D)V" key="8" label="relevant_sync_read" filename="JGFInstrumentor.java" line="93"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addOpsToTimer" offset="6" desc="(Ljava/lang/String;D)V" key="9" label="relevant_sync_read" filename="JGFInstrumentor.java" line="94"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimeToTimer" offset="2" desc="(Ljava/lang/String;D)V" key="10" label="relevant_sync_read" filename="JGFInstrumentor.java" line="103"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimeToTimer" offset="6" desc="(Ljava/lang/String;D)V" key="11" label="relevant_sync_read" filename="JGFInstrumentor.java" line="104"/>
      <instruction className="jgfutil.JGFInstrumentor" method="readTimer" offset="2" desc="(Ljava/lang/String;)D" key="12" label="relevant_sync_read" filename="JGFInstrumentor.java" line="117"/>
      <instruction className="jgfutil.JGFInstrumentor" method="readTimer" offset="6" desc="(Ljava/lang/String;)D" key="13" label="relevant_sync_read" filename="JGFInstrumentor.java" line="118"/>
      <instruction className="jgfutil.JGFInstrumentor" method="resetTimer" offset="2" desc="(Ljava/lang/String;)V" key="14" label="relevant_sync_read" filename="JGFInstrumentor.java" line="129"/>
      <instruction className="jgfutil.JGFInstrumentor" method="resetTimer" offset="6" desc="(Ljava/lang/String;)V" key="15" label="relevant_sync_read" filename="JGFInstrumentor.java" line="130"/>
      <instruction className="jgfutil.JGFInstrumentor" method="printTimer" offset="2" desc="(Ljava/lang/String;)V" key="16" label="relevant_sync_read" filename="JGFInstrumentor.java" line="139"/>
      <instruction className="jgfutil.JGFInstrumentor" method="printTimer" offset="6" desc="(Ljava/lang/String;)V" key="17" label="relevant_sync_read" filename="JGFInstrumentor.java" line="140"/>
      <instruction className="jgfutil.JGFInstrumentor" method="printperfTimer" offset="2" desc="(Ljava/lang/String;)V" key="18" label="relevant_sync_read" filename="JGFInstrumentor.java" line="149"/>
      <instruction className="jgfutil.JGFInstrumentor" method="printperfTimer" offset="6" desc="(Ljava/lang/String;)V" key="19" label="relevant_sync_read" filename="JGFInstrumentor.java" line="150"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimer" offset="22" desc="(Ljava/lang/String;)V" key="20" label="relevant_sync_write" filename="JGFInstrumentor.java" line="43"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimer" offset="23" desc="(Ljava/lang/String;Ljava/lang/String;)V" key="21" label="relevant_sync_write" filename="JGFInstrumentor.java" line="54"/>
      <instruction className="jgfutil.JGFInstrumentor" method="addTimer" offset="24" desc="(Ljava/lang/String;Ljava/lang/String;I)V" key="22" label="relevant_sync_write" filename="JGFInstrumentor.java" line="66"/>
      <class name="jgfutil.JGFInstrumentor" key="23" label="guard" filename="JGFInstrumentor.java"/>
    </locations>
    <info>
      <message value="All accesses to threadsafe collection in field 'timers' are guarded."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="23"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_GUARD_USAGE">
    <locations>
      <field className="benchmarks.elevator.Floor" name="downPeople" type="Ljava/util/Vector;" key="0" filename="Floor.java" line="19"/>
      <instruction className="benchmarks.elevator.Controls" method="pushDown" offset="29" desc="(II)V" key="1" label="relevant_sync_read" filename="Controls.java" line="28"/>
      <instruction className="benchmarks.elevator.Controls" method="pushDown" offset="35" desc="(II)V" key="2" label="relevant_sync_read" filename="Controls.java" line="29"/>
      <instruction className="benchmarks.elevator.Controls" method="checkDown" offset="12" desc="(I)Z" key="3" label="relevant_sync_read" filename="Controls.java" line="96"/>
    </locations>
    <info>
      <message value="All accesses to threadsafe collection in field 'downPeople' are guarded."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_GUARD_USAGE">
    <locations>
      <field className="benchmarks.elevator.Floor" name="upPeople" type="Ljava/util/Vector;" key="0" filename="Floor.java" line="19"/>
      <instruction className="benchmarks.elevator.Controls" method="pushUp" offset="29" desc="(II)V" key="1" label="relevant_sync_read" filename="Controls.java" line="40"/>
      <instruction className="benchmarks.elevator.Controls" method="pushUp" offset="35" desc="(II)V" key="2" label="relevant_sync_read" filename="Controls.java" line="41"/>
      <instruction className="benchmarks.elevator.Controls" method="checkUp" offset="12" desc="(I)Z" key="3" label="relevant_sync_read" filename="Controls.java" line="84"/>
    </locations>
    <info>
      <message value="All accesses to threadsafe collection in field 'upPeople' are guarded."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_GUARD_USAGE">
    <locations>
      <field className="jgfutil.JGFInstrumentor" name="data" type="Ljava/util/Hashtable;" key="0" filename="JGFInstrumentor.java" line="29"/>
      <instruction className="jgfutil.JGFInstrumentor" method="retrieveData" offset="2" desc="(Ljava/lang/String;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="JGFInstrumentor.java" line="163"/>
      <instruction className="jgfutil.JGFInstrumentor" method="storeData" offset="3" desc="(Ljava/lang/String;Ljava/lang/Object;)V" key="2" label="relevant_sync_write" filename="JGFInstrumentor.java" line="159"/>
      <class name="jgfutil.JGFInstrumentor" key="3" label="guard" filename="JGFInstrumentor.java"/>
    </locations>
    <info>
      <message value="All accesses to threadsafe collection in field 'data' are guarded."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="3"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_GUARD_USAGE">
    <locations>
      <field className="benchmarks.jgfutil.JGFInstrumentor" name="data" type="Ljava/util/Hashtable;" key="0" filename="JGFInstrumentor.java" line="29"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="retrieveData" offset="2" desc="(Ljava/lang/String;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="JGFInstrumentor.java" line="168"/>
      <instruction className="benchmarks.jgfutil.JGFInstrumentor" method="storeData" offset="3" desc="(Ljava/lang/String;Ljava/lang/Object;)V" key="2" label="relevant_sync_write" filename="JGFInstrumentor.java" line="164"/>
      <class name="benchmarks.jgfutil.JGFInstrumentor" key="3" label="guard" filename="JGFInstrumentor.java"/>
    </locations>
    <info>
      <message value="All accesses to threadsafe collection in field 'data' are guarded."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="3"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="net.sf.cache4j.CacheCleaner" name="_sleep" type="Z" key="0" filename="CacheCleaner.java" line="32"/>
      <instruction className="net.sf.cache4j.CacheCleaner" method="setCleanInterval" offset="8" desc="(J)V" key="1" label="relevant_sync_read" filename="CacheCleaner.java" line="61"/>
      <instruction className="net.sf.cache4j.CacheCleaner" method="&lt;init&gt;" offset="7" desc="(J)V" key="2" label="irrelevant_unsync_write" filename="CacheCleaner.java" line="32"/>
      <method className="net.sf.cache4j.CacheCleaner" name="run" desc="()V" key="3" label="async_entrypoint" filename="CacheCleaner.java" line="70"/>
      <instruction className="net.sf.cache4j.CacheCleaner" method="run" offset="49" desc="()V" key="4" label="relevant_unsync_write" filename="CacheCleaner.java" line="95"/>
      <instruction className="net.sf.cache4j.CacheCleaner" method="run" offset="57" desc="()V" key="5" label="relevant_unsync_write" filename="CacheCleaner.java" line="100"/>
      <class name="net.sf.cache4j.CacheCleaner" key="6" label="guard_type" filename="CacheCleaner.java"/>
    </locations>
    <info>
      <message value="Field '_sleep' is accessed from asynchronously invoked method without synchronization."/>
      <guards>
        <guardRelative typeRef="6" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="contest.manager.Manager" name="request_counter" type="I" key="0" filename="Manager.java" line="7"/>
      <method className="contest.manager.TmemoryHandler" name="run" desc="()V" key="1" label="async_entrypoint" filename="TmemoryHandler.java" line="8"/>
      <instruction className="contest.manager.TmemoryHandler" method="run" offset="22" desc="()V" key="2" label="relevant_unsync_read" filename="TmemoryHandler.java" line="10"/>
      <instruction className="contest.manager.TmemoryHandler" method="run" offset="6" desc="()V" key="3" label="relevant_unsync_read" filename="TmemoryHandler.java" line="12"/>
      <instruction className="contest.manager.TmemoryHandler" method="run" offset="16" desc="()V" key="4" label="relevant_unsync_read" filename="TmemoryHandler.java" line="19"/>
      <method className="contest.manager.Trelease" name="run" desc="()V" key="5" label="async_entrypoint" filename="Trelease.java" line="12"/>
      <instruction className="contest.manager.Trelease" method="run" offset="8" desc="()V" key="6" label="relevant_sync_read" filename="Trelease.java" line="26"/>
      <instruction className="contest.manager.Trelease" method="run" offset="23" desc="()V" key="7" label="relevant_unsync_read" filename="Trelease.java" line="32"/>
      <instruction className="contest.manager.Manager" method="&lt;clinit&gt;" offset="1" desc="()V" key="8" label="irrelevant_unsync_write" filename="Manager.java" line="7"/>
      <instruction className="contest.manager.Manager" method="main" offset="6" desc="([Ljava/lang/String;)V" key="9" label="relevant_unsync_write" filename="Manager.java" line="24"/>
      <instruction className="contest.manager.Manager" method="main" offset="25" desc="([Ljava/lang/String;)V" key="10" label="relevant_unsync_write" filename="Manager.java" line="33"/>
      <instruction className="contest.manager.TmemoryHandler" method="run" offset="19" desc="()V" key="11" label="relevant_unsync_write" filename="TmemoryHandler.java" line="19"/>
      <field className="contest.manager.Manager" name="rel_counter_lock" type="Ljava/lang/String;" key="12" label="guard_field" filename="Manager.java" line="11"/>
    </locations>
    <info>
      <message value="Field 'request_counter' is accessed from asynchronously invoked method without synchronization."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="12"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.philo.Philo" name="falcon_exception" type="Z" key="0" filename="Philo.java" line="41"/>
      <instruction className="benchmarks.philo.Philo" method="&lt;clinit&gt;" offset="1" desc="()V" key="1" label="irrelevant_unsync_write" filename="Philo.java" line="41"/>
      <method className="benchmarks.philo.Philo" name="run" desc="()V" key="2" label="async_entrypoint" filename="Philo.java" line="52"/>
      <instruction className="benchmarks.philo.Philo" method="run" offset="53" desc="()V" key="3" label="relevant_unsync_write" filename="Philo.java" line="69"/>
      <instruction className="benchmarks.philo.Philo" method="main" offset="1" desc="([Ljava/lang/String;)V" key="4" label="relevant_unsync_write" filename="Philo.java" line="75"/>
    </locations>
    <info>
      <message value="Field 'falcon_exception' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.dstest.AtomicityBugVector2" name="falcon_exception" type="Z" key="0" filename="AtomicityBugVector2.java" line="7"/>
      <instruction className="benchmarks.dstest.AtomicityBugVector2" method="main" offset="119" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="AtomicityBugVector2.java" line="141"/>
      <instruction className="benchmarks.dstest.AtomicityBugVector2" method="&lt;clinit&gt;" offset="1" desc="()V" key="2" label="irrelevant_unsync_write" filename="AtomicityBugVector2.java" line="7"/>
      <method className="benchmarks.dstest.AtomicityBugVector2" name="run" desc="()V" key="3" label="async_entrypoint" filename="AtomicityBugVector2.java" line="29"/>
      <instruction className="benchmarks.dstest.AtomicityBugVector2" method="run" offset="146" desc="()V" key="4" label="relevant_unsync_write" filename="AtomicityBugVector2.java" line="90"/>
      <instruction className="benchmarks.dstest.AtomicityBugVector2" method="main" offset="1" desc="([Ljava/lang/String;)V" key="5" label="relevant_unsync_write" filename="AtomicityBugVector2.java" line="99"/>
    </locations>
    <info>
      <message value="Field 'falcon_exception' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="net.sf.cache4j.CacheCleaner" name="falcon_exception" type="Z" key="0" filename="CacheCleaner.java" line="21"/>
      <instruction className="net.sf.cache4j.test.SimpleTest" method="main" offset="89" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="SimpleTest.java" line="386"/>
      <instruction className="net.sf.cache4j.CacheCleaner" method="&lt;clinit&gt;" offset="1" desc="()V" key="2" label="irrelevant_unsync_write" filename="CacheCleaner.java" line="21"/>
      <method className="net.sf.cache4j.CacheCleaner" name="run" desc="()V" key="3" label="async_entrypoint" filename="CacheCleaner.java" line="70"/>
      <instruction className="net.sf.cache4j.CacheCleaner" method="run" offset="71" desc="()V" key="4" label="relevant_unsync_write" filename="CacheCleaner.java" line="105"/>
      <instruction className="net.sf.cache4j.test.SimpleTest" method="main" offset="1" desc="([Ljava/lang/String;)V" key="5" label="relevant_unsync_write" filename="SimpleTest.java" line="322"/>
    </locations>
    <info>
      <message value="Field 'falcon_exception' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="contest.bufwriter.Checker" name="_writtenCount" type="I" key="0" filename="Checker.java" line="14"/>
      <method className="contest.bufwriter.Checker" name="run" desc="()V" key="1" label="async_entrypoint" filename="Checker.java" line="21"/>
      <instruction className="contest.bufwriter.Checker" method="run" offset="7" desc="()V" key="2" label="relevant_sync_read" filename="Checker.java" line="27"/>
      <instruction className="contest.bufwriter.Checker" method="getWrittenCount" offset="1" desc="()I" key="3" label="relevant_unsync_read" filename="Checker.java" line="35"/>
      <instruction className="contest.bufwriter.Checker" method="&lt;init&gt;" offset="7" desc="(Lcontest/bufwriter/Buffer;)V" key="4" label="irrelevant_unsync_write" filename="Checker.java" line="18"/>
      <instruction className="contest.bufwriter.Checker" method="run" offset="12" desc="()V" key="5" label="relevant_sync_write" filename="Checker.java" line="27"/>
      <field className="contest.bufwriter.Checker" name="_buf" type="Lcontest/bufwriter/Buffer;" key="6" label="guard_field" filename="Checker.java" line="13"/>
      <class name="contest.bufwriter.Checker" key="7" label="guard_type" filename="Checker.java"/>
    </locations>
    <info>
      <message value="Field '_writtenCount' is accessed from asynchronously invoked method without synchronization."/>
      <guards>
        <guardRelative typeRef="7" key="0" intrinsic="true">
          <guardPath>
            <locationRef key="6"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="steals" type="I" key="0" filename="FJTaskRunner.java" line="377"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="52" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="1" label="relevant_unsync_read" filename="FJTaskRunner.java" line="673"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="92" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="2" label="relevant_unsync_read" filename="FJTaskRunner.java" line="694"/>
      <method className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="run" desc="()V" key="3" label="async_entrypoint" filename="FJTaskRunner.java" line="793"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="48" desc="()V" key="4" label="relevant_unsync_read" filename="FJTaskRunner.java" line="738"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="88" desc="()V" key="5" label="relevant_unsync_read" filename="FJTaskRunner.java" line="754"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" method="stats" offset="44" desc="()V" key="6" label="relevant_unsync_read" filename="FJTaskRunnerGroup.java" line="389"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="&lt;init&gt;" offset="31" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTaskRunnerGroup;)V" key="7" label="irrelevant_unsync_write" filename="FJTaskRunner.java" line="377"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="55" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="8" label="relevant_unsync_write" filename="FJTaskRunner.java" line="673"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="95" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="9" label="relevant_unsync_write" filename="FJTaskRunner.java" line="694"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="51" desc="()V" key="10" label="relevant_unsync_write" filename="FJTaskRunner.java" line="738"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="91" desc="()V" key="11" label="relevant_unsync_write" filename="FJTaskRunner.java" line="754"/>
    </locations>
    <info>
      <message value="Field 'steals' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.dstest.DeadlockBugLinkedHashSet" name="falcon_exception" type="Z" key="0" filename="DeadlockBugLinkedHashSet.java" line="12"/>
      <instruction className="benchmarks.dstest.DeadlockBugLinkedHashSet" method="main" offset="114" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="DeadlockBugLinkedHashSet.java" line="103"/>
      <instruction className="benchmarks.dstest.DeadlockBugLinkedHashSet" method="&lt;clinit&gt;" offset="5" desc="()V" key="2" label="irrelevant_unsync_write" filename="DeadlockBugLinkedHashSet.java" line="12"/>
      <method className="benchmarks.dstest.DeadlockBugLinkedHashSet" name="run" desc="()V" key="3" label="async_entrypoint" filename="DeadlockBugLinkedHashSet.java" line="28"/>
      <instruction className="benchmarks.dstest.DeadlockBugLinkedHashSet" method="run" offset="97" desc="()V" key="4" label="relevant_unsync_write" filename="DeadlockBugLinkedHashSet.java" line="74"/>
      <instruction className="benchmarks.dstest.DeadlockBugLinkedHashSet" method="main" offset="1" desc="([Ljava/lang/String;)V" key="5" label="relevant_unsync_write" filename="DeadlockBugLinkedHashSet.java" line="80"/>
    </locations>
    <info>
      <message value="Field 'falcon_exception' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.dstest.AtomicityBugLinkedHashSet" name="falcon_exception" type="Z" key="0" filename="AtomicityBugLinkedHashSet.java" line="24"/>
      <instruction className="benchmarks.dstest.AtomicityBugLinkedHashSet" method="main" offset="69" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="AtomicityBugLinkedHashSet.java" line="132"/>
      <instruction className="benchmarks.dstest.AtomicityBugLinkedHashSet" method="&lt;clinit&gt;" offset="1" desc="()V" key="2" label="irrelevant_unsync_write" filename="AtomicityBugLinkedHashSet.java" line="24"/>
      <method className="benchmarks.dstest.AtomicityBugLinkedHashSet" name="run" desc="()V" key="3" label="async_entrypoint" filename="AtomicityBugLinkedHashSet.java" line="37"/>
      <instruction className="benchmarks.dstest.AtomicityBugLinkedHashSet" method="run" offset="111" desc="()V" key="4" label="relevant_unsync_write" filename="AtomicityBugLinkedHashSet.java" line="97"/>
      <instruction className="benchmarks.dstest.AtomicityBugLinkedHashSet" method="main" offset="1" desc="([Ljava/lang/String;)V" key="5" label="relevant_unsync_write" filename="AtomicityBugLinkedHashSet.java" line="106"/>
    </locations>
    <info>
      <message value="Field 'falcon_exception' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" name="head_" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/LinkedNode;" key="0" filename="LinkedQueue.java" line="38"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="&lt;init&gt;" offset="18" desc="()V" key="1" label="irrelevant_unsync_read" filename="LinkedQueue.java" line="61"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="extract" offset="1" desc="()Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="LinkedQueue.java" line="79"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="extract" offset="8" desc="()Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="LinkedQueue.java" line="81"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="peek" offset="1" desc="()Ljava/lang/Object;" key="4" label="relevant_unsync_read" filename="LinkedQueue.java" line="136"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="peek" offset="6" desc="()Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="LinkedQueue.java" line="137"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="isEmpty" offset="1" desc="()Z" key="6" label="relevant_unsync_read" filename="LinkedQueue.java" line="147"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="isEmpty" offset="6" desc="()Z" key="7" label="relevant_sync_read" filename="LinkedQueue.java" line="148"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="&lt;init&gt;" offset="15" desc="()V" key="8" label="irrelevant_unsync_write" filename="LinkedQueue.java" line="60"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="extract" offset="21" desc="()Ljava/lang/Object;" key="9" label="relevant_sync_write" filename="LinkedQueue.java" line="85"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" key="10" label="guard_type" filename="LinkedQueue.java"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" name="head_" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/LinkedNode;" key="11" label="guard_field" filename="LinkedQueue.java" line="38"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" name="putLock_" type="Ljava/lang/Object;" key="12" label="guard_field" filename="LinkedQueue.java" line="43"/>
    </locations>
    <info>
      <message value="Accesses to field 'head_' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="10" key="1" intrinsic="true">
          <guardPath>
            <locationRef key="12"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
        <guardRelative typeRef="10" key="2" intrinsic="true">
          <guardPath>
            <locationRef key="11"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
        <guardRelative typeRef="10" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="1" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="2" status="always"/>
            <guardRef key="1" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="2" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="2" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="2" status="always"/>
            <guardRef key="1" status="sometimes"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" name="_put" type="J" key="0" filename="BlockingCache.java" line="502"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incPut" offset="2" desc="()V" key="1" label="irrelevant_sync_read" filename="BlockingCache.java" line="512"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="getTotalPuts" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="BlockingCache.java" line="524"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incPut" offset="5" desc="()V" key="3" label="irrelevant_sync_write" filename="BlockingCache.java" line="512"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="reset" offset="8" desc="()V" key="4" label="relevant_sync_write" filename="BlockingCache.java" line="532"/>
      <class name="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" key="5" label="guard_type" filename="BlockingCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_put' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="5" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="irrelevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="contest.shop.shop" name="items" type="I" key="0" filename="shop.java" line="21"/>
      <instruction className="contest.shop.shop" method="getItem" offset="3" desc="()V" key="1" label="relevant_sync_read" filename="shop.java" line="27"/>
      <instruction className="contest.shop.shop" method="getItem" offset="8" desc="()V" key="2" label="relevant_sync_read" filename="shop.java" line="28"/>
      <instruction className="contest.shop.shop" method="putItem" offset="2" desc="()V" key="3" label="relevant_sync_read" filename="shop.java" line="32"/>
      <instruction className="contest.shop.shop" method="putItem" offset="9" desc="()V" key="4" label="relevant_sync_read" filename="shop.java" line="33"/>
      <instruction className="contest.shop.shop" method="isEmpty" offset="1" desc="()Z" key="5" label="relevant_sync_read" filename="shop.java" line="39"/>
      <instruction className="contest.shop.shop" method="main" offset="104" desc="([Ljava/lang/String;)V" key="6" label="relevant_unsync_read" filename="shop.java" line="108"/>
      <instruction className="contest.shop.shop" method="main" offset="153" desc="([Ljava/lang/String;)V" key="7" label="relevant_unsync_read" filename="shop.java" line="122"/>
      <instruction className="contest.shop.shop" method="&lt;init&gt;" offset="11" desc="()V" key="8" label="irrelevant_unsync_write" filename="shop.java" line="21"/>
      <instruction className="contest.shop.shop" method="getItem" offset="11" desc="()V" key="9" label="relevant_sync_write" filename="shop.java" line="28"/>
      <instruction className="contest.shop.shop" method="putItem" offset="5" desc="()V" key="10" label="relevant_sync_write" filename="shop.java" line="32"/>
      <class name="contest.shop.shop" key="11" label="guard_type" filename="shop.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'items' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="11" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache" name="_map" type="Ljava/util/Map;" key="0" filename="SynchronizedCache.java" line="66"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="put" offset="32" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="SynchronizedCache.java" line="116"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="get" offset="8" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="SynchronizedCache.java" line="147"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="remove" offset="8" desc="(Ljava/lang/Object;)V" key="3" label="relevant_sync_read" filename="SynchronizedCache.java" line="180"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="size" offset="1" desc="()I" key="4" label="relevant_unsync_read" filename="SynchronizedCache.java" line="194"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="clear" offset="1" desc="()V" key="5" label="relevant_sync_read" filename="SynchronizedCache.java" line="202"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="clean" offset="20" desc="()V" key="6" label="relevant_sync_read" filename="SynchronizedCache.java" line="257"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="checkOverflow" offset="31" desc="(I)V" key="7" label="relevant_sync_read" filename="SynchronizedCache.java" line="282"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="checkOverflow" offset="18" desc="(I)V" key="8" label="relevant_sync_read" filename="SynchronizedCache.java" line="291"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="newCacheObject" offset="6" desc="(Ljava/lang/Object;)Lnet/sf/cache4j/impl/CacheObject;" key="9" label="relevant_sync_read" filename="SynchronizedCache.java" line="304"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="setCacheConfig" offset="25" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="10" label="relevant_sync_write" filename="SynchronizedCache.java" line="238"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache" key="11" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_map' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="11" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" name="size" type="I" key="0" filename="CopyOnWriteArrayList.java" line="1046"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="rangeCheck" offset="4" desc="(I)V" key="1" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1065"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="rangeCheck" offset="17" desc="(I)V" key="2" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1067"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="size" offset="8" desc="()I" key="3" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1092"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="add" offset="11" desc="(ILjava/lang/Object;)V" key="4" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1099"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="add" offset="32" desc="(ILjava/lang/Object;)V" key="5" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1103"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="remove" offset="25" desc="(I)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1113"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="listIterator" offset="11" desc="(I)Ljava/util/ListIterator;" key="7" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1128"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="listIterator" offset="24" desc="(I)Ljava/util/ListIterator;" key="8" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1129"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList$COWSubListIterator" method="hasNext" offset="4" desc="()Z" key="9" label="relevant_unsync_read" filename="CopyOnWriteArrayList.java" line="1143"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="subList" offset="11" desc="(II)Ljava/util/List;" key="10" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1189"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="&lt;init&gt;" offset="17" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;II)V" key="11" label="irrelevant_unsync_write" filename="CopyOnWriteArrayList.java" line="1054"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="add" offset="35" desc="(ILjava/lang/Object;)V" key="12" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="1103"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="remove" offset="28" desc="(I)Ljava/lang/Object;" key="13" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="1113"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" name="l" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;" key="14" label="guard_field" filename="CopyOnWriteArrayList.java" line="1044"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" key="15" label="guard_type" filename="CopyOnWriteArrayList.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'size' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="15" key="0" intrinsic="true">
          <guardPath>
            <locationRef key="14"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Hashtable$Entry" name="next" type="Lbenchmarks/instrumented/java15/util/Hashtable$Entry;" key="0" filename="Hashtable.java" line="894"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="contains" offset="26" desc="(Ljava/lang/Object;)Z" key="1" label="relevant_sync_read" filename="Hashtable.java" line="276"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="containsKey" offset="30" desc="(Ljava/lang/Object;)Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="316"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="get" offset="31" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="338"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="44" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="367"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="42" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="Hashtable.java" line="403"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="64" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="440"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="39" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="Hashtable.java" line="444"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="45" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="Hashtable.java" line="446"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="contains" offset="41" desc="(Ljava/lang/Object;)Z" key="9" label="relevant_unsync_read" filename="Hashtable.java" line="640"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="74" desc="(Ljava/lang/Object;)Z" key="10" label="relevant_unsync_read" filename="Hashtable.java" line="656"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="51" desc="(Ljava/lang/Object;)Z" key="11" label="relevant_unsync_read" filename="Hashtable.java" line="660"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="57" desc="(Ljava/lang/Object;)Z" key="12" label="relevant_unsync_read" filename="Hashtable.java" line="662"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="hashCode" offset="39" desc="()I" key="13" label="relevant_sync_read" filename="Hashtable.java" line="782"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Entry" method="clone" offset="9" desc="()Ljava/lang/Object;" key="14" label="relevant_sync_read" filename="Hashtable.java" line="905"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="nextElement" offset="35" desc="()Ljava/lang/Object;" key="15" label="relevant_unsync_read" filename="Hashtable.java" line="1007"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="95" desc="()V" key="16" label="relevant_sync_read" filename="Hashtable.java" line="1037"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="72" desc="()V" key="17" label="relevant_sync_read" filename="Hashtable.java" line="1042"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="77" desc="()V" key="18" label="relevant_sync_read" filename="Hashtable.java" line="1044"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="57" desc="()V" key="19" label="relevant_sync_write" filename="Hashtable.java" line="370"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="40" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="20" label="relevant_sync_write" filename="Hashtable.java" line="444"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="52" desc="(Ljava/lang/Object;)Z" key="21" label="relevant_unsync_write" filename="Hashtable.java" line="660"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Entry" method="&lt;init&gt;" offset="13" desc="(ILjava/lang/Object;Ljava/lang/Object;Lbenchmarks/instrumented/java15/util/Hashtable$Entry;)V" key="22" label="irrelevant_unsync_write" filename="Hashtable.java" line="900"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="78" desc="()V" key="23" label="relevant_sync_write" filename="Hashtable.java" line="1044"/>
    </locations>
    <info>
      <message value="Accesses to field 'next' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="22" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="23" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="CounterClass" name="shared_cont" type="I" key="0" filename="JGFSyncBench.java" line="138"/>
      <instruction className="CounterClass" method="update" offset="2" desc="()V" key="1" label="relevant_sync_read" filename="JGFSyncBench.java" line="145"/>
      <instruction className="SyncMethodRunner" method="run" offset="13" desc="()V" key="2" label="relevant_unsync_read" filename="JGFSyncBench.java" line="170"/>
      <instruction className="SyncObjectRunner" method="run" offset="11" desc="()V" key="3" label="relevant_sync_read" filename="JGFSyncBench.java" line="194"/>
      <instruction className="SyncObjectRunner" method="run" offset="28" desc="()V" key="4" label="relevant_unsync_read" filename="JGFSyncBench.java" line="199"/>
      <instruction className="CounterClass" method="&lt;init&gt;" offset="4" desc="(I)V" key="5" label="irrelevant_unsync_write" filename="JGFSyncBench.java" line="141"/>
      <instruction className="CounterClass" method="update" offset="5" desc="()V" key="6" label="relevant_sync_write" filename="JGFSyncBench.java" line="145"/>
      <instruction className="SyncObjectRunner" method="run" offset="14" desc="()V" key="7" label="relevant_sync_write" filename="JGFSyncBench.java" line="194"/>
      <class name="CounterClass" key="8" label="guard_type" filename="JGFSyncBench.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'shared_cont' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="8" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Vector$1" name="count" type="I" key="0" filename="Vector.java" line="296"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector$1" method="hasMoreElements" offset="1" desc="()Z" key="1" label="relevant_unsync_read" filename="Vector.java" line="299"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector$1" method="nextElement" offset="6" desc="()Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="Vector.java" line="304"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector$1" method="nextElement" offset="16" desc="()Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Vector.java" line="305"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector$1" method="&lt;init&gt;" offset="7" desc="(Lbenchmarks/instrumented/java15/util/Vector;)V" key="4" label="irrelevant_unsync_write" filename="Vector.java" line="296"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector$1" method="nextElement" offset="20" desc="()Ljava/lang/Object;" key="5" label="relevant_sync_write" filename="Vector.java" line="305"/>
      <field className="benchmarks.instrumented.java15.util.Vector$1" name="this$0" type="Lbenchmarks/instrumented/java15/util/Vector;" key="6" label="guard_field" filename="Vector.java"/>
      <class name="benchmarks.instrumented.java15.util.Vector$1" key="7" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'count' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="7" key="0" intrinsic="true">
          <guardPath>
            <locationRef key="6"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" name="_hit" type="J" key="0" filename="SynchronizedCache.java" line="330"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incHits" offset="2" desc="()V" key="1" label="irrelevant_unsync_read" filename="SynchronizedCache.java" line="336"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="getCacheHits" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="SynchronizedCache.java" line="348"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="toString" offset="5" desc="()Ljava/lang/String;" key="3" label="relevant_unsync_read" filename="SynchronizedCache.java" line="369"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incHits" offset="5" desc="()V" key="4" label="irrelevant_unsync_write" filename="SynchronizedCache.java" line="336"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="reset" offset="2" desc="()V" key="5" label="relevant_sync_write" filename="SynchronizedCache.java" line="360"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" key="6" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_hit' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="6" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Hashtable" name="count" type="I" key="0" filename="Hashtable.java" line="115"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="size" offset="1" desc="()I" key="1" label="relevant_sync_read" filename="Hashtable.java" line="208"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="isEmpty" offset="1" desc="()Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="218"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="53" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="410"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="85" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="4" label="relevant_sync_read" filename="Hashtable.java" line="421"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="49" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="Hashtable.java" line="446"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="getEnumeration" offset="1" desc="(I)Ljava/util/Enumeration;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="542"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="getIterator" offset="1" desc="(I)Lbenchmarks/instrumented/java/util/Iterator;" key="7" label="relevant_unsync_read" filename="Hashtable.java" line="550"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$KeySet" method="size" offset="2" desc="()I" key="8" label="relevant_unsync_read" filename="Hashtable.java" line="589"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="62" desc="(Ljava/lang/Object;)Z" key="9" label="relevant_unsync_read" filename="Hashtable.java" line="658"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="size" offset="2" desc="()I" key="10" label="relevant_unsync_read" filename="Hashtable.java" line="667"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$ValueCollection" method="size" offset="2" desc="()I" key="11" label="relevant_unsync_read" filename="Hashtable.java" line="697"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="hashCode" offset="3" desc="()I" key="12" label="relevant_sync_read" filename="Hashtable.java" line="770"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="82" desc="()V" key="13" label="relevant_sync_read" filename="Hashtable.java" line="1006"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="88" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="14" label="relevant_sync_write" filename="Hashtable.java" line="421"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="52" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="15" label="relevant_sync_write" filename="Hashtable.java" line="446"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clear" offset="22" desc="()V" key="16" label="relevant_sync_write" filename="Hashtable.java" line="480"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="65" desc="(Ljava/lang/Object;)Z" key="17" label="relevant_unsync_write" filename="Hashtable.java" line="658"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="85" desc="()V" key="18" label="relevant_sync_write" filename="Hashtable.java" line="1006"/>
      <class name="benchmarks.instrumented.java.util.Hashtable" key="19" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'count' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="19" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="18" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="contest.lottery.BuggyProgram" name="randomNumber" type="J" key="0" filename="BuggyProgram.java" line="72"/>
      <method className="contest.lottery.BuggyProgram$User" name="run" desc="()V" key="1" label="async_entrypoint" filename="BuggyProgram.java" line="302"/>
      <instruction className="contest.lottery.BuggyProgram$User" method="run" offset="15" desc="()V" key="2" label="relevant_unsync_read" filename="BuggyProgram.java" line="309"/>
      <instruction className="contest.lottery.BuggyProgram$User" method="present" offset="17" desc="()V" key="3" label="relevant_sync_read" filename="BuggyProgram.java" line="347"/>
      <instruction className="contest.lottery.BuggyProgram$User" method="record" offset="7" desc="()V" key="4" label="relevant_sync_read" filename="BuggyProgram.java" line="361"/>
      <instruction className="contest.lottery.BuggyProgram" method="&lt;init&gt;" offset="4" desc="()V" key="5" label="irrelevant_unsync_write" filename="BuggyProgram.java" line="72"/>
      <instruction className="contest.lottery.BuggyProgram$User" method="generate" offset="14" desc="()V" key="6" label="relevant_sync_write" filename="BuggyProgram.java" line="331"/>
      <field className="contest.lottery.BuggyProgram$User" name="this$0" type="Lcontest/lottery/BuggyProgram;" key="7" label="target_field" filename="BuggyProgram.java"/>
      <class name="contest.lottery.BuggyProgram$User" key="8" label="guard_type" filename="BuggyProgram.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'randomNumber' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="8" key="0" intrinsic="true">
          <guardPath/>
          <targetPath>
            <locationRef key="7"/>
          </targetPath>
        </guardRelative>
      </guards>
      <accesses>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" name="entries" type="I" key="0" filename="FJTaskRunnerGroup.java" line="154"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" method="stats" offset="120" desc="()V" key="1" label="relevant_unsync_read" filename="FJTaskRunnerGroup.java" line="410"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" method="signalNewTask" offset="2" desc="()V" key="2" label="relevant_sync_read" filename="FJTaskRunnerGroup.java" line="566"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" method="&lt;init&gt;" offset="18" desc="(I)V" key="3" label="irrelevant_unsync_write" filename="FJTaskRunnerGroup.java" line="154"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" method="signalNewTask" offset="5" desc="()V" key="4" label="relevant_sync_write" filename="FJTaskRunnerGroup.java" line="566"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" key="5" label="guard_type" filename="FJTaskRunnerGroup.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'entries' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="5" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Hashtable" name="table" type="[Lbenchmarks/instrumented/java15/util/Hashtable$Entry;" key="0" filename="Hashtable.java" line="112"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="contains" offset="7" desc="(Ljava/lang/Object;)Z" key="1" label="relevant_sync_read" filename="Hashtable.java" line="274"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="containsKey" offset="1" desc="(Ljava/lang/Object;)Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="313"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="get" offset="1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="335"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="1" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="354"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="5" desc="()V" key="5" label="relevant_sync_read" filename="Hashtable.java" line="355"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="7" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="400"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="60" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="Hashtable.java" line="416"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="Hashtable.java" line="437"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clear" offset="1" desc="()V" key="9" label="relevant_sync_read" filename="Hashtable.java" line="478"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="6" desc="()Ljava/lang/Object;" key="10" label="relevant_sync_read" filename="Hashtable.java" line="495"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="11" desc="()Ljava/lang/Object;" key="11" label="relevant_sync_read" filename="Hashtable.java" line="496"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="16" desc="()Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Hashtable.java" line="497"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="24" desc="()Ljava/lang/Object;" key="13" label="relevant_sync_read" filename="Hashtable.java" line="498"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="contains" offset="13" desc="(Ljava/lang/Object;)Z" key="14" label="relevant_unsync_read" filename="Hashtable.java" line="636"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="13" desc="(Ljava/lang/Object;)Z" key="15" label="relevant_unsync_read" filename="Hashtable.java" line="651"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="hashCode" offset="18" desc="()I" key="16" label="relevant_sync_read" filename="Hashtable.java" line="780"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="&lt;init&gt;" offset="7" desc="(Lbenchmarks/instrumented/java15/util/Hashtable;IZ)V" key="17" label="relevant_unsync_read" filename="Hashtable.java" line="958"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="32" desc="()V" key="18" label="relevant_sync_read" filename="Hashtable.java" line="1033"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="&lt;init&gt;" offset="55" desc="(IF)V" key="19" label="irrelevant_unsync_write" filename="Hashtable.java" line="165"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="32" desc="()V" key="20" label="relevant_sync_write" filename="Hashtable.java" line="362"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="9" desc="()Ljava/lang/Object;" key="21" label="relevant_sync_write" filename="Hashtable.java" line="495"/>
      <class name="benchmarks.instrumented.java15.util.Hashtable" key="22" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'table' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="22" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="15" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="20" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" name="_hit" type="J" key="0" filename="BlockingCache.java" line="500"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incHits" offset="2" desc="()V" key="1" label="irrelevant_sync_read" filename="BlockingCache.java" line="506"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="getCacheHits" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="BlockingCache.java" line="518"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="toString" offset="5" desc="()Ljava/lang/String;" key="3" label="relevant_unsync_read" filename="BlockingCache.java" line="539"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incHits" offset="5" desc="()V" key="4" label="irrelevant_sync_write" filename="BlockingCache.java" line="506"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="reset" offset="2" desc="()V" key="5" label="relevant_sync_write" filename="BlockingCache.java" line="530"/>
      <class name="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" key="6" label="guard_type" filename="BlockingCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_hit' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="6" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Vector" name="elementCount" type="I" key="0" filename="Vector.java" line="83"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="&lt;init&gt;" offset="8" desc="(Lbenchmarks/instrumented/java15/util/Collection;)V" key="1" label="irrelevant_unsync_read" filename="Vector.java" line="152"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="copyInto" offset="6" desc="([Ljava/lang/Object;)V" key="2" label="relevant_sync_read" filename="Vector.java" line="167"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="trimToSize" offset="11" desc="()V" key="3" label="relevant_sync_read" filename="Vector.java" line="181"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="trimToSize" offset="19" desc="()V" key="4" label="relevant_sync_read" filename="Vector.java" line="183"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="trimToSize" offset="28" desc="()V" key="5" label="relevant_sync_read" filename="Vector.java" line="184"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="ensureCapacityHelper" offset="37" desc="(I)V" key="6" label="relevant_sync_read" filename="Vector.java" line="228"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="setSize" offset="8" desc="(I)V" key="7" label="relevant_sync_read" filename="Vector.java" line="243"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="setSize" offset="25" desc="(I)V" key="8" label="relevant_sync_read" filename="Vector.java" line="246"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="size" offset="1" desc="()I" key="9" label="relevant_sync_read" filename="Vector.java" line="270"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="isEmpty" offset="1" desc="()Z" key="10" label="relevant_sync_read" filename="Vector.java" line="281"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector$1" method="hasMoreElements" offset="4" desc="()Z" key="11" label="relevant_unsync_read" filename="Vector.java" line="299"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector$1" method="nextElement" offset="9" desc="()Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Vector.java" line="304"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="indexOf" offset="15" desc="(Ljava/lang/Object;I)I" key="13" label="relevant_sync_read" filename="Vector.java" line="359"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="indexOf" offset="33" desc="(Ljava/lang/Object;I)I" key="14" label="relevant_sync_read" filename="Vector.java" line="363"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="lastIndexOf" offset="3" desc="(Ljava/lang/Object;)I" key="15" label="relevant_sync_read" filename="Vector.java" line="381"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="lastIndexOf" offset="2" desc="(Ljava/lang/Object;I)I" key="16" label="relevant_sync_read" filename="Vector.java" line="400"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="lastIndexOf" offset="14" desc="(Ljava/lang/Object;I)I" key="17" label="relevant_sync_read" filename="Vector.java" line="401"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="elementAt" offset="2" desc="(I)Ljava/lang/Object;" key="18" label="relevant_sync_read" filename="Vector.java" line="431"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="elementAt" offset="14" desc="(I)Ljava/lang/Object;" key="19" label="relevant_sync_read" filename="Vector.java" line="432"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="firstElement" offset="1" desc="()Ljava/lang/Object;" key="20" label="relevant_sync_read" filename="Vector.java" line="446"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="lastElement" offset="1" desc="()Ljava/lang/Object;" key="21" label="relevant_sync_read" filename="Vector.java" line="460"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="lastElement" offset="10" desc="()Ljava/lang/Object;" key="22" label="relevant_sync_read" filename="Vector.java" line="463"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="setElementAt" offset="2" desc="(Ljava/lang/Object;I)V" key="23" label="relevant_sync_read" filename="Vector.java" line="488"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="setElementAt" offset="14" desc="(Ljava/lang/Object;I)V" key="24" label="relevant_sync_read" filename="Vector.java" line="490"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeElementAt" offset="8" desc="(I)V" key="25" label="relevant_sync_read" filename="Vector.java" line="517"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeElementAt" offset="20" desc="(I)V" key="26" label="relevant_sync_read" filename="Vector.java" line="519"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeElementAt" offset="33" desc="(I)V" key="27" label="relevant_sync_read" filename="Vector.java" line="524"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeElementAt" offset="53" desc="(I)V" key="28" label="relevant_sync_read" filename="Vector.java" line="528"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeElementAt" offset="60" desc="(I)V" key="29" label="relevant_sync_read" filename="Vector.java" line="529"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="insertElementAt" offset="8" desc="(Ljava/lang/Object;I)V" key="30" label="relevant_sync_read" filename="Vector.java" line="557"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="insertElementAt" offset="20" desc="(Ljava/lang/Object;I)V" key="31" label="relevant_sync_read" filename="Vector.java" line="559"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="insertElementAt" offset="27" desc="(Ljava/lang/Object;I)V" key="32" label="relevant_sync_read" filename="Vector.java" line="561"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="insertElementAt" offset="40" desc="(Ljava/lang/Object;I)V" key="33" label="relevant_sync_read" filename="Vector.java" line="562"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="insertElementAt" offset="51" desc="(Ljava/lang/Object;I)V" key="34" label="relevant_sync_read" filename="Vector.java" line="564"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addElement" offset="8" desc="(Ljava/lang/Object;)V" key="35" label="relevant_sync_read" filename="Vector.java" line="581"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addElement" offset="16" desc="(Ljava/lang/Object;)V" key="36" label="relevant_sync_read" filename="Vector.java" line="582"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeAllElements" offset="17" desc="()V" key="37" label="relevant_sync_read" filename="Vector.java" line="623"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="clone" offset="6" desc="()Ljava/lang/Object;" key="38" label="relevant_sync_read" filename="Vector.java" line="639"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="clone" offset="16" desc="()Ljava/lang/Object;" key="39" label="relevant_sync_read" filename="Vector.java" line="640"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="toArray" offset="1" desc="()[Ljava/lang/Object;" key="40" label="relevant_sync_read" filename="Vector.java" line="656"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="toArray" offset="10" desc="()[Ljava/lang/Object;" key="41" label="relevant_sync_read" filename="Vector.java" line="657"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="toArray" offset="3" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="42" label="relevant_sync_read" filename="Vector.java" line="685"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="toArray" offset="9" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="43" label="relevant_sync_read" filename="Vector.java" line="687"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="toArray" offset="19" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="44" label="relevant_sync_read" filename="Vector.java" line="689"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="toArray" offset="24" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="45" label="relevant_sync_read" filename="Vector.java" line="691"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="toArray" offset="28" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="46" label="relevant_sync_read" filename="Vector.java" line="692"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="get" offset="2" desc="(I)Ljava/lang/Object;" key="47" label="relevant_sync_read" filename="Vector.java" line="709"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="set" offset="2" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="48" label="relevant_sync_read" filename="Vector.java" line="727"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="add" offset="8" desc="(Ljava/lang/Object;)Z" key="49" label="relevant_sync_read" filename="Vector.java" line="744"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="add" offset="16" desc="(Ljava/lang/Object;)Z" key="50" label="relevant_sync_read" filename="Vector.java" line="745"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="remove" offset="8" desc="(I)Ljava/lang/Object;" key="51" label="relevant_sync_read" filename="Vector.java" line="792"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="remove" offset="21" desc="(I)Ljava/lang/Object;" key="52" label="relevant_sync_read" filename="Vector.java" line="796"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="remove" offset="43" desc="(I)Ljava/lang/Object;" key="53" label="relevant_sync_read" filename="Vector.java" line="800"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="14" desc="(Lbenchmarks/instrumented/java15/util/Collection;)Z" key="54" label="relevant_sync_read" filename="Vector.java" line="848"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="23" desc="(Lbenchmarks/instrumented/java15/util/Collection;)Z" key="55" label="relevant_sync_read" filename="Vector.java" line="849"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="28" desc="(Lbenchmarks/instrumented/java15/util/Collection;)Z" key="56" label="relevant_sync_read" filename="Vector.java" line="850"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="10" desc="(ILbenchmarks/instrumented/java15/util/Collection;)Z" key="57" label="relevant_sync_read" filename="Vector.java" line="901"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="25" desc="(ILbenchmarks/instrumented/java15/util/Collection;)Z" key="58" label="relevant_sync_read" filename="Vector.java" line="906"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="30" desc="(ILbenchmarks/instrumented/java15/util/Collection;)Z" key="59" label="relevant_sync_read" filename="Vector.java" line="908"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="55" desc="(ILbenchmarks/instrumented/java15/util/Collection;)Z" key="60" label="relevant_sync_read" filename="Vector.java" line="914"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeRange" offset="7" desc="(II)V" key="61" label="relevant_syncmixed_read" filename="Vector.java" line="1000"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeRange" offset="20" desc="(II)V" key="62" label="relevant_syncmixed_read" filename="Vector.java" line="1005"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeRange" offset="39" desc="(II)V" key="63" label="relevant_syncmixed_read" filename="Vector.java" line="1006"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeRange" offset="31" desc="(II)V" key="64" label="relevant_syncmixed_read" filename="Vector.java" line="1007"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="&lt;init&gt;" offset="5" desc="(Lbenchmarks/instrumented/java15/util/Collection;)V" key="65" label="irrelevant_unsync_write" filename="Vector.java" line="149"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="setSize" offset="29" desc="(I)V" key="66" label="relevant_sync_write" filename="Vector.java" line="250"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeElementAt" offset="56" desc="(I)V" key="67" label="relevant_sync_write" filename="Vector.java" line="528"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="insertElementAt" offset="54" desc="(Ljava/lang/Object;I)V" key="68" label="relevant_sync_write" filename="Vector.java" line="564"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addElement" offset="20" desc="(Ljava/lang/Object;)V" key="69" label="relevant_sync_write" filename="Vector.java" line="582"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeAllElements" offset="21" desc="()V" key="70" label="relevant_sync_write" filename="Vector.java" line="626"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="add" offset="20" desc="(Ljava/lang/Object;)Z" key="71" label="relevant_sync_write" filename="Vector.java" line="745"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="remove" offset="47" desc="(I)Ljava/lang/Object;" key="72" label="relevant_sync_write" filename="Vector.java" line="800"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="31" desc="(Lbenchmarks/instrumented/java15/util/Collection;)Z" key="73" label="relevant_sync_write" filename="Vector.java" line="850"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="addAll" offset="58" desc="(ILbenchmarks/instrumented/java15/util/Collection;)Z" key="74" label="relevant_sync_write" filename="Vector.java" line="914"/>
      <instruction className="benchmarks.instrumented.java15.util.Vector" method="removeRange" offset="35" desc="(II)V" key="75" label="relevant_syncmixed_write" filename="Vector.java" line="1007"/>
      <class name="benchmarks.instrumented.java15.util.Vector" key="76" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'elementCount' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="76" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
        <guardUnknown key="1" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="24" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="27" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="28" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="29" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="30" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="31" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="32" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="33" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="34" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="35" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="36" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="37" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="38" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="39" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="40" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="41" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="42" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="43" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="44" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="45" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="46" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="47" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="48" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="49" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="50" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="51" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="52" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="53" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="54" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="55" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="56" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="57" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="58" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="59" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="60" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="61" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="1" status="sometimes"/>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="62" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="1" status="sometimes"/>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="63" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="1" status="sometimes"/>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="64" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="1" status="sometimes"/>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="65" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="66" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="67" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="68" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="69" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="70" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="71" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="72" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="73" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="74" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="75" type="relevant_syncmixed_write">
          <accessGuards>
            <guardRef key="1" status="sometimes"/>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" name="done" type="Z" key="0" filename="ReplicatedWorkers.java" line="54"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator" method="notifyDoneChange" offset="2" desc="()V" key="1" label="relevant_syncmixed_read" filename="ReplicatedWorkers.java" line="168"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator" method="mainAwaitTerminate" offset="13" desc="()V" key="2" label="relevant_sync_read" filename="ReplicatedWorkers.java" line="189"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator" method="take" offset="13" desc="()I" key="3" label="relevant_sync_read" filename="ReplicatedWorkers.java" line="199"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator" method="take" offset="31" desc="()I" key="4" label="relevant_sync_read" filename="ReplicatedWorkers.java" line="210"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator" method="take" offset="35" desc="()I" key="5" label="relevant_sync_read" filename="ReplicatedWorkers.java" line="216"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" method="&lt;init&gt;" offset="7" desc="(Lbenchmarks/jpf_test_cases/replicatedcasestudies/Configuration;Lbenchmarks/jpf_test_cases/replicatedcasestudies/Collection;Lbenchmarks/jpf_test_cases/replicatedcasestudies/Collection;II)V" key="6" label="irrelevant_unsync_write" filename="ReplicatedWorkers.java" line="75"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" method="execute" offset="2" desc="()V" key="7" label="relevant_sync_write" filename="ReplicatedWorkers.java" line="120"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" method="execute" offset="11" desc="()V" key="8" label="relevant_sync_write" filename="ReplicatedWorkers.java" line="135"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Worker" method="run" offset="26" desc="()V" key="9" label="relevant_unsync_write" filename="ReplicatedWorkers.java" line="284"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Worker" method="run" offset="65" desc="()V" key="10" label="relevant_unsync_write" filename="ReplicatedWorkers.java" line="307"/>
      <class name="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" key="11" label="guard_type" filename="ReplicatedWorkers.java"/>
      <field className="benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator" name="memberOf" type="Lbenchmarks/jpf_test_cases/replicatedcasestudies/ReplicatedWorkers;" key="12" label="target_field" filename="ReplicatedWorkers.java" line="152"/>
      <class name="benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator" key="13" label="guard_type" filename="ReplicatedWorkers.java"/>
      <field className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" name="theCoord" type="Lbenchmarks/jpf_test_cases/replicatedcasestudies/Coordinator;" key="14" label="target_field" filename="ReplicatedWorkers.java" line="59"/>
    </locations>
    <info>
      <message value="Accesses to field 'done' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="11" key="2" intrinsic="true">
          <guardPath/>
          <targetPath>
            <locationRef key="14"/>
            <locationRef key="12"/>
          </targetPath>
        </guardRelative>
        <guardRelative typeRef="13" key="1" intrinsic="true">
          <guardPath/>
          <targetPath>
            <locationRef key="12"/>
          </targetPath>
        </guardRelative>
        <guardRelative typeRef="11" key="3" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="0" status="sometimes"/>
            <guardRef key="1" status="sometimes"/>
            <guardRef key="2" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
            <guardRef key="2" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="3" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="3" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="deq" type="[Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTaskRunner$VolatileTaskRef;" key="0" filename="FJTaskRunner.java" line="285"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="deqSize" offset="1" desc="()I" key="1" label="relevant_unsync_read" filename="FJTaskRunner.java" line="288"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="push" offset="7" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="2" label="relevant_syncmixed_read" filename="FJTaskRunner.java" line="401"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="push" offset="18" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="3" label="relevant_syncmixed_read" filename="FJTaskRunner.java" line="403"/>
      <method className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="run" desc="()V" key="4" label="async_entrypoint" filename="FJTaskRunner.java" line="793"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="pop" offset="15" desc="()Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;" key="5" label="relevant_unsync_read" filename="FJTaskRunner.java" line="483"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="confirmPop" offset="5" desc="(I)Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;" key="6" label="relevant_sync_read" filename="FJTaskRunner.java" line="497"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="confirmTake" offset="10" desc="(I)Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;" key="7" label="relevant_sync_read" filename="FJTaskRunner.java" line="558"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="10" desc="()V" key="8" label="relevant_sync_read" filename="FJTaskRunner.java" line="579"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="17" desc="()V" key="9" label="relevant_sync_read" filename="FJTaskRunner.java" line="581"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="26" desc="()V" key="10" label="relevant_sync_read" filename="FJTaskRunner.java" line="582"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="37" desc="()V" key="11" label="relevant_sync_read" filename="FJTaskRunner.java" line="583"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="70" desc="()V" key="12" label="relevant_sync_read" filename="FJTaskRunner.java" line="593"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="51" desc="()V" key="13" label="relevant_sync_read" filename="FJTaskRunner.java" line="594"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="60" desc="()V" key="14" label="relevant_sync_read" filename="FJTaskRunner.java" line="595"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="81" desc="()V" key="15" label="relevant_sync_read" filename="FJTaskRunner.java" line="602"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="105" desc="()V" key="16" label="relevant_sync_read" filename="FJTaskRunner.java" line="611"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="7" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="17" label="relevant_unsync_read" filename="FJTaskRunner.java" line="869"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="18" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="18" label="relevant_unsync_read" filename="FJTaskRunner.java" line="871"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="16" desc="([Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="19" label="relevant_unsync_read" filename="FJTaskRunner.java" line="926"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="30" desc="([Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="20" label="relevant_unsync_read" filename="FJTaskRunner.java" line="928"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="&lt;init&gt;" offset="5" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTaskRunnerGroup;)V" key="21" label="irrelevant_unsync_write" filename="FJTaskRunner.java" line="285"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="checkOverflow" offset="133" desc="()V" key="22" label="relevant_sync_write" filename="FJTaskRunner.java" line="616"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" key="23" label="guard_type" filename="FJTaskRunner.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'deq' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="23" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
        <guardUnknown key="1" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="18" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="19" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="20" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="21" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="22" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Vector$1" name="count" type="I" key="0" filename="Vector.java" line="297"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="hasMoreElements" offset="1" desc="()Z" key="1" label="relevant_unsync_read" filename="Vector.java" line="300"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="nextElement" offset="6" desc="()Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="Vector.java" line="305"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="nextElement" offset="16" desc="()Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Vector.java" line="306"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="&lt;init&gt;" offset="7" desc="(Lbenchmarks/instrumented/java/util/Vector;)V" key="4" label="irrelevant_unsync_write" filename="Vector.java" line="297"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="nextElement" offset="20" desc="()Ljava/lang/Object;" key="5" label="relevant_sync_write" filename="Vector.java" line="306"/>
      <field className="benchmarks.instrumented.java.util.Vector$1" name="this$0" type="Lbenchmarks/instrumented/java/util/Vector;" key="6" label="guard_field" filename="Vector.java"/>
      <class name="benchmarks.instrumented.java.util.Vector$1" key="7" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'count' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="7" key="0" intrinsic="true">
          <guardPath>
            <locationRef key="6"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" name="elementCount" type="I" key="0" filename="Vector.java" line="9"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="copyInto" offset="1" desc="([Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="Vector.java" line="64"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="trimToSize" offset="5" desc="()V" key="2" label="relevant_sync_read" filename="Vector.java" line="79"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="trimToSize" offset="13" desc="()V" key="3" label="relevant_sync_read" filename="Vector.java" line="81"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="trimToSize" offset="23" desc="()V" key="4" label="relevant_sync_read" filename="Vector.java" line="82"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="ensureCapacity" offset="38" desc="(I)V" key="5" label="relevant_sync_read" filename="Vector.java" line="104"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="setSize" offset="2" desc="(I)V" key="6" label="relevant_sync_read" filename="Vector.java" line="118"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="setSize" offset="19" desc="(I)V" key="7" label="relevant_sync_read" filename="Vector.java" line="121"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="size" offset="1" desc="()I" key="8" label="relevant_unsync_read" filename="Vector.java" line="145"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="isEmpty" offset="1" desc="()Z" key="9" label="relevant_unsync_read" filename="Vector.java" line="156"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="indexOf" offset="15" desc="(Ljava/lang/Object;I)I" key="10" label="relevant_sync_read" filename="Vector.java" line="200"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="lastIndexOf" offset="3" desc="(Ljava/lang/Object;)I" key="11" label="relevant_unsync_read" filename="Vector.java" line="218"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="elementAt" offset="2" desc="(I)Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Vector.java" line="251"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="elementAt" offset="14" desc="(I)Ljava/lang/Object;" key="13" label="relevant_sync_read" filename="Vector.java" line="252"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="firstElement" offset="1" desc="()Ljava/lang/Object;" key="14" label="relevant_sync_read" filename="Vector.java" line="274"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="lastElement" offset="1" desc="()Ljava/lang/Object;" key="15" label="relevant_sync_read" filename="Vector.java" line="289"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="lastElement" offset="10" desc="()Ljava/lang/Object;" key="16" label="relevant_sync_read" filename="Vector.java" line="292"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="setElementAt" offset="2" desc="(Ljava/lang/Object;I)V" key="17" label="relevant_sync_read" filename="Vector.java" line="310"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="setElementAt" offset="14" desc="(Ljava/lang/Object;I)V" key="18" label="relevant_sync_read" filename="Vector.java" line="312"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="2" desc="(I)V" key="19" label="relevant_sync_read" filename="Vector.java" line="332"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="14" desc="(I)V" key="20" label="relevant_sync_read" filename="Vector.java" line="334"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="27" desc="(I)V" key="21" label="relevant_sync_read" filename="Vector.java" line="339"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="48" desc="(I)V" key="22" label="relevant_sync_read" filename="Vector.java" line="343"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="55" desc="(I)V" key="23" label="relevant_sync_read" filename="Vector.java" line="344"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="2" desc="(Ljava/lang/Object;I)V" key="24" label="relevant_sync_read" filename="Vector.java" line="364"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="16" desc="(Ljava/lang/Object;I)V" key="25" label="relevant_sync_read" filename="Vector.java" line="366"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="23" desc="(Ljava/lang/Object;I)V" key="26" label="relevant_sync_read" filename="Vector.java" line="368"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="37" desc="(Ljava/lang/Object;I)V" key="27" label="relevant_sync_read" filename="Vector.java" line="369"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="48" desc="(Ljava/lang/Object;I)V" key="28" label="relevant_sync_read" filename="Vector.java" line="371"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="addElement" offset="2" desc="(Ljava/lang/Object;)V" key="29" label="relevant_sync_read" filename="Vector.java" line="384"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="addElement" offset="10" desc="(Ljava/lang/Object;)V" key="30" label="relevant_sync_read" filename="Vector.java" line="385"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeAllElements" offset="11" desc="()V" key="31" label="relevant_sync_read" filename="Vector.java" line="414"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="clone" offset="6" desc="()Ljava/lang/Object;" key="32" label="relevant_sync_read" filename="Vector.java" line="429"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="clone" offset="17" desc="()Ljava/lang/Object;" key="33" label="relevant_sync_read" filename="Vector.java" line="430"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="setSize" offset="23" desc="(I)V" key="34" label="relevant_sync_write" filename="Vector.java" line="125"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="51" desc="(I)V" key="35" label="relevant_sync_write" filename="Vector.java" line="343"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="51" desc="(Ljava/lang/Object;I)V" key="36" label="relevant_sync_write" filename="Vector.java" line="371"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="addElement" offset="14" desc="(Ljava/lang/Object;)V" key="37" label="relevant_sync_write" filename="Vector.java" line="385"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeAllElements" offset="15" desc="()V" key="38" label="relevant_sync_write" filename="Vector.java" line="417"/>
      <class name="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" key="39" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'elementCount' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="39" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="24" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="27" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="28" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="29" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="30" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="31" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="32" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="33" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="34" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="35" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="36" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="37" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="38" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache" name="_cacheInfo" type="Lnet/sf/cache4j/impl/SynchronizedCache$CacheInfoImpl;" key="0" filename="SynchronizedCache.java" line="86"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="put" offset="53" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="SynchronizedCache.java" line="125"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="get" offset="31" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="SynchronizedCache.java" line="153"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="get" offset="49" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="SynchronizedCache.java" line="160"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="get" offset="54" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="4" label="relevant_sync_read" filename="SynchronizedCache.java" line="164"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="remove" offset="14" desc="(Ljava/lang/Object;)V" key="5" label="relevant_sync_read" filename="SynchronizedCache.java" line="182"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="getCacheInfo" offset="1" desc="()Lnet/sf/cache4j/CacheInfo;" key="6" label="relevant_unsync_read" filename="SynchronizedCache.java" line="211"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="setCacheConfig" offset="43" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="7" label="relevant_sync_write" filename="SynchronizedCache.java" line="241"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache" key="8" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_cacheInfo' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="8" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.tsp.TourElement" name="prefix_weight" type="I" key="0" filename="TourElement.java" line="15"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="61" desc="(II)I" key="1" label="relevant_sync_read" filename="TspSolver.java" line="85"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="38" desc="(I)I" key="2" label="relevant_sync_read" filename="TspSolver.java" line="169"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="61" desc="(I)I" key="3" label="relevant_sync_read" filename="TspSolver.java" line="172"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="65" desc="(I)I" key="4" label="relevant_sync_read" filename="TspSolver.java" line="174"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="198" desc="(I)I" key="5" label="relevant_sync_read" filename="TspSolver.java" line="224"/>
      <instruction className="benchmarks.tsp.TspSolver" method="recursive_solve" offset="6" desc="(I)V" key="6" label="relevant_unsync_read" filename="TspSolver.java" line="481"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="87" desc="([Ljava/lang/String;)V" key="7" label="relevant_unsync_write" filename="Tsp.java" line="64"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="72" desc="(II)I" key="8" label="relevant_sync_write" filename="TspSolver.java" line="85"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="59" desc="(I)I" key="9" label="relevant_sync_write" filename="TspSolver.java" line="170"/>
    </locations>
    <info>
      <message value="Accesses to field 'prefix_weight' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Hashtable" name="count" type="I" key="0" filename="Hashtable.java" line="117"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="size" offset="1" desc="()I" key="1" label="relevant_sync_read" filename="Hashtable.java" line="210"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="isEmpty" offset="1" desc="()Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="220"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="53" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="412"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="85" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="4" label="relevant_sync_read" filename="Hashtable.java" line="423"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="49" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="Hashtable.java" line="448"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="getEnumeration" offset="1" desc="(I)Lbenchmarks/instrumented/java15/util/Enumeration;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="544"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="getIterator" offset="1" desc="(I)Lbenchmarks/instrumented/java15/util/Iterator;" key="7" label="relevant_unsync_read" filename="Hashtable.java" line="552"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$KeySet" method="size" offset="2" desc="()I" key="8" label="relevant_unsync_read" filename="Hashtable.java" line="591"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="62" desc="(Ljava/lang/Object;)Z" key="9" label="relevant_unsync_read" filename="Hashtable.java" line="664"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="size" offset="2" desc="()I" key="10" label="relevant_unsync_read" filename="Hashtable.java" line="673"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$ValueCollection" method="size" offset="2" desc="()I" key="11" label="relevant_unsync_read" filename="Hashtable.java" line="703"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="hashCode" offset="3" desc="()I" key="12" label="relevant_sync_read" filename="Hashtable.java" line="776"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="82" desc="()V" key="13" label="relevant_sync_read" filename="Hashtable.java" line="1045"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="88" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="14" label="relevant_sync_write" filename="Hashtable.java" line="423"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="52" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="15" label="relevant_sync_write" filename="Hashtable.java" line="448"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clear" offset="22" desc="()V" key="16" label="relevant_sync_write" filename="Hashtable.java" line="482"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="65" desc="(Ljava/lang/Object;)Z" key="17" label="relevant_unsync_write" filename="Hashtable.java" line="664"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="85" desc="()V" key="18" label="relevant_sync_write" filename="Hashtable.java" line="1045"/>
      <class name="benchmarks.instrumented.java15.util.Hashtable" key="19" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'count' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="19" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="18" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.tsp.PrioQElement" name="index" type="I" key="0" filename="PrioQElement.java" line="12"/>
      <instruction className="benchmarks.tsp.TspSolver" method="less_than" offset="12" desc="(Lbenchmarks/tsp/PrioQElement;Lbenchmarks/tsp/PrioQElement;)Z" key="1" label="relevant_unsync_read" filename="TspSolver.java" line="240"/>
      <instruction className="benchmarks.tsp.TspSolver" method="DumpPrioQ" offset="9" desc="()V" key="2" label="relevant_unsync_read" filename="TspSolver.java" line="254"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="115" desc="(I)V" key="3" label="relevant_sync_read" filename="TspSolver.java" line="338"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="122" desc="(I)V" key="4" label="relevant_sync_read" filename="TspSolver.java" line="340"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="15" desc="()I" key="5" label="relevant_sync_read" filename="TspSolver.java" line="377"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="33" desc="()I" key="6" label="relevant_sync_read" filename="TspSolver.java" line="391"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="81" desc="()I" key="7" label="relevant_sync_read" filename="TspSolver.java" line="417"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="88" desc="()I" key="8" label="relevant_sync_read" filename="TspSolver.java" line="419"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="95" desc="([Ljava/lang/String;)V" key="9" label="relevant_unsync_write" filename="Tsp.java" line="68"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="100" desc="(I)V" key="10" label="relevant_sync_write" filename="TspSolver.java" line="328"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="123" desc="(I)V" key="11" label="relevant_sync_write" filename="TspSolver.java" line="340"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="130" desc="(I)V" key="12" label="relevant_sync_write" filename="TspSolver.java" line="342"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="34" desc="()I" key="13" label="relevant_sync_write" filename="TspSolver.java" line="391"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="89" desc="()I" key="14" label="relevant_sync_write" filename="TspSolver.java" line="419"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="96" desc="()I" key="15" label="relevant_sync_write" filename="TspSolver.java" line="421"/>
    </locations>
    <info>
      <message value="Accesses to field 'index' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" name="head_" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/LinkedNode;" key="0" filename="BoundedLinkedQueue.java" line="61"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="&lt;init&gt;" offset="35" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="BoundedLinkedQueue.java" line="115"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="extract" offset="1" desc="()Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="180"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="extract" offset="8" desc="()Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="182"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="peek" offset="1" desc="()Ljava/lang/Object;" key="4" label="relevant_unsync_read" filename="BoundedLinkedQueue.java" line="195"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="peek" offset="6" desc="()Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="196"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="isEmpty" offset="1" desc="()Z" key="6" label="relevant_unsync_read" filename="BoundedLinkedQueue.java" line="361"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="isEmpty" offset="6" desc="()Z" key="7" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="362"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="&lt;init&gt;" offset="32" desc="(I)V" key="8" label="irrelevant_unsync_write" filename="BoundedLinkedQueue.java" line="114"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="extract" offset="21" desc="()Ljava/lang/Object;" key="9" label="relevant_sync_write" filename="BoundedLinkedQueue.java" line="186"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" key="10" label="guard_type" filename="BoundedLinkedQueue.java"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" name="head_" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/LinkedNode;" key="11" label="guard_field" filename="BoundedLinkedQueue.java" line="61"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" name="takeGuard_" type="Ljava/lang/Object;" key="12" label="guard_field" filename="BoundedLinkedQueue.java" line="79"/>
    </locations>
    <info>
      <message value="Accesses to field 'head_' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="10" key="1" intrinsic="true">
          <guardPath>
            <locationRef key="12"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
        <guardRelative typeRef="10" key="2" intrinsic="true">
          <guardPath>
            <locationRef key="11"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
        <guardRelative typeRef="10" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="1" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="2" status="always"/>
            <guardRef key="1" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="2" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="2" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="2" status="always"/>
            <guardRef key="1" status="sometimes"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Hashtable$Entry" name="next" type="Lbenchmarks/instrumented/java/util/Hashtable$Entry;" key="0" filename="Hashtable.java" line="855"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="contains" offset="26" desc="(Ljava/lang/Object;)Z" key="1" label="relevant_sync_read" filename="Hashtable.java" line="274"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="containsKey" offset="30" desc="(Ljava/lang/Object;)Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="314"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="get" offset="31" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="336"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="44" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="365"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="42" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="Hashtable.java" line="401"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="64" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="438"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="39" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="Hashtable.java" line="442"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="45" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="Hashtable.java" line="444"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="contains" offset="41" desc="(Ljava/lang/Object;)Z" key="9" label="relevant_unsync_read" filename="Hashtable.java" line="634"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="74" desc="(Ljava/lang/Object;)Z" key="10" label="relevant_unsync_read" filename="Hashtable.java" line="650"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="51" desc="(Ljava/lang/Object;)Z" key="11" label="relevant_unsync_read" filename="Hashtable.java" line="654"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="57" desc="(Ljava/lang/Object;)Z" key="12" label="relevant_unsync_read" filename="Hashtable.java" line="656"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="hashCode" offset="39" desc="()I" key="13" label="relevant_sync_read" filename="Hashtable.java" line="776"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="clone" offset="9" desc="()Ljava/lang/Object;" key="14" label="relevant_sync_read" filename="Hashtable.java" line="866"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="nextElement" offset="35" desc="()Ljava/lang/Object;" key="15" label="relevant_unsync_read" filename="Hashtable.java" line="968"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="95" desc="()V" key="16" label="relevant_sync_read" filename="Hashtable.java" line="998"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="72" desc="()V" key="17" label="relevant_sync_read" filename="Hashtable.java" line="1003"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="77" desc="()V" key="18" label="relevant_sync_read" filename="Hashtable.java" line="1005"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="57" desc="()V" key="19" label="relevant_sync_write" filename="Hashtable.java" line="368"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="40" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="20" label="relevant_sync_write" filename="Hashtable.java" line="442"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="52" desc="(Ljava/lang/Object;)Z" key="21" label="relevant_unsync_write" filename="Hashtable.java" line="654"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="&lt;init&gt;" offset="13" desc="(ILjava/lang/Object;Ljava/lang/Object;Lbenchmarks/instrumented/java/util/Hashtable$Entry;)V" key="22" label="irrelevant_unsync_write" filename="Hashtable.java" line="861"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="78" desc="()V" key="23" label="relevant_sync_write" filename="Hashtable.java" line="1005"/>
    </locations>
    <info>
      <message value="Accesses to field 'next' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="22" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="23" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" name="_miss" type="J" key="0" filename="SynchronizedCache.java" line="331"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incMisses" offset="2" desc="()V" key="1" label="irrelevant_unsync_read" filename="SynchronizedCache.java" line="339"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="getCacheMisses" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="SynchronizedCache.java" line="351"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="toString" offset="10" desc="()Ljava/lang/String;" key="3" label="relevant_unsync_read" filename="SynchronizedCache.java" line="369"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incMisses" offset="5" desc="()V" key="4" label="irrelevant_unsync_write" filename="SynchronizedCache.java" line="339"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="reset" offset="5" desc="()V" key="5" label="relevant_sync_write" filename="SynchronizedCache.java" line="361"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" key="6" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_miss' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="6" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.BlockingCache" name="_map" type="Ljava/util/Map;" key="0" filename="BlockingCache.java" line="84"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="remove" offset="39" desc="(Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="BlockingCache.java" line="284"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="remove" offset="66" desc="(Ljava/lang/Object;)V" key="2" label="relevant_sync_read" filename="BlockingCache.java" line="299"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="remove" offset="78" desc="(Ljava/lang/Object;)V" key="3" label="relevant_sync_read" filename="BlockingCache.java" line="301"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="size" offset="1" desc="()I" key="4" label="relevant_unsync_read" filename="BlockingCache.java" line="314"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="clear" offset="7" desc="()V" key="5" label="relevant_sync_read" filename="BlockingCache.java" line="325"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="clean" offset="20" desc="()V" key="6" label="relevant_sync_read" filename="BlockingCache.java" line="386"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="checkOverflow" offset="53" desc="(I)V" key="7" label="relevant_sync_read" filename="BlockingCache.java" line="413"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="checkOverflow" offset="28" desc="(I)V" key="8" label="relevant_sync_read" filename="BlockingCache.java" line="425"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="checkOverflow" offset="40" desc="(I)V" key="9" label="relevant_sync_read" filename="BlockingCache.java" line="427"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="tmapPut" offset="5" desc="(Lnet/sf/cache4j/impl/CacheObject;)V" key="10" label="relevant_sync_read" filename="BlockingCache.java" line="450"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="getCacheObject" offset="5" desc="(Ljava/lang/Object;)Lnet/sf/cache4j/impl/CacheObject;" key="11" label="relevant_sync_read" filename="BlockingCache.java" line="465"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="getCacheObject" offset="18" desc="(Ljava/lang/Object;)Lnet/sf/cache4j/impl/CacheObject;" key="12" label="relevant_sync_read" filename="BlockingCache.java" line="468"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="setCacheConfig" offset="25" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="13" label="relevant_sync_write" filename="BlockingCache.java" line="365"/>
      <class name="net.sf.cache4j.impl.BlockingCache" key="14" label="guard_type" filename="BlockingCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_map' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="14" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Hashtable" name="table" type="[Lbenchmarks/instrumented/java/util/Hashtable$Entry;" key="0" filename="Hashtable.java" line="110"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="contains" offset="7" desc="(Ljava/lang/Object;)Z" key="1" label="relevant_sync_read" filename="Hashtable.java" line="272"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="containsKey" offset="1" desc="(Ljava/lang/Object;)Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="311"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="get" offset="1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="333"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="1" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="352"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="5" desc="()V" key="5" label="relevant_sync_read" filename="Hashtable.java" line="353"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="7" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="398"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="60" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="Hashtable.java" line="414"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="Hashtable.java" line="435"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clear" offset="1" desc="()V" key="9" label="relevant_sync_read" filename="Hashtable.java" line="476"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="6" desc="()Ljava/lang/Object;" key="10" label="relevant_sync_read" filename="Hashtable.java" line="493"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="11" desc="()Ljava/lang/Object;" key="11" label="relevant_sync_read" filename="Hashtable.java" line="494"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="16" desc="()Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Hashtable.java" line="495"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="24" desc="()Ljava/lang/Object;" key="13" label="relevant_sync_read" filename="Hashtable.java" line="496"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="contains" offset="13" desc="(Ljava/lang/Object;)Z" key="14" label="relevant_unsync_read" filename="Hashtable.java" line="630"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="13" desc="(Ljava/lang/Object;)Z" key="15" label="relevant_unsync_read" filename="Hashtable.java" line="645"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="hashCode" offset="18" desc="()I" key="16" label="relevant_sync_read" filename="Hashtable.java" line="774"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="&lt;init&gt;" offset="7" desc="(Lbenchmarks/instrumented/java/util/Hashtable;IZ)V" key="17" label="relevant_unsync_read" filename="Hashtable.java" line="919"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="32" desc="()V" key="18" label="relevant_sync_read" filename="Hashtable.java" line="994"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="&lt;init&gt;" offset="55" desc="(IF)V" key="19" label="irrelevant_unsync_write" filename="Hashtable.java" line="163"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="32" desc="()V" key="20" label="relevant_sync_write" filename="Hashtable.java" line="360"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="9" desc="()Ljava/lang/Object;" key="21" label="relevant_sync_write" filename="Hashtable.java" line="493"/>
      <class name="benchmarks.instrumented.java.util.Hashtable" key="22" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'table' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="22" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="15" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="20" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" name="next" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;" key="0" filename="WaitFreeQueue.java" line="82"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" method="pointerEquals" offset="2" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;J)Z" key="1" label="relevant_sync_read" filename="WaitFreeQueue.java" line="90"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" method="commit" offset="1" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;JLbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;J)Z" key="2" label="relevant_sync_read" filename="WaitFreeQueue.java" line="98"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="insert" offset="18" desc="(Ljava/lang/Object;)V" key="3" label="relevant_sync_read" filename="WaitFreeQueue.java" line="131"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="insert" offset="35" desc="(Ljava/lang/Object;)V" key="4" label="relevant_sync_read" filename="WaitFreeQueue.java" line="139"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="extract" offset="13" desc="()Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="WaitFreeQueue.java" line="173"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="extract" offset="32" desc="()Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="WaitFreeQueue.java" line="180"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="extract" offset="45" desc="()Ljava/lang/Object;" key="7" label="relevant_unsync_read" filename="WaitFreeQueue.java" line="184"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="peek" offset="11" desc="()Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="WaitFreeQueue.java" line="276"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="peek" offset="30" desc="()Ljava/lang/Object;" key="9" label="relevant_sync_read" filename="WaitFreeQueue.java" line="283"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="peek" offset="43" desc="()Ljava/lang/Object;" key="10" label="relevant_unsync_read" filename="WaitFreeQueue.java" line="287"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" method="&lt;init&gt;" offset="4" desc="(Ljava/lang/Object;)V" key="11" label="irrelevant_unsync_write" filename="WaitFreeQueue.java" line="82"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" method="commit" offset="17" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;JLbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;J)Z" key="12" label="relevant_sync_write" filename="WaitFreeQueue.java" line="99"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="&lt;init&gt;" offset="22" desc="()V" key="13" label="relevant_unsync_write" filename="WaitFreeQueue.java" line="116"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue" method="&lt;init&gt;" offset="26" desc="()V" key="14" label="relevant_unsync_write" filename="WaitFreeQueue.java" line="117"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" key="15" label="guard_type" filename="WaitFreeQueue.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'next' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="15" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="14" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.tsp.TourElement" name="lower_bound" type="I" key="0" filename="TourElement.java" line="16"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="102" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="Tsp.java" line="69"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="47" desc="(I)V" key="2" label="relevant_sync_read" filename="TspSolver.java" line="305"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="103" desc="(I)V" key="3" label="relevant_sync_read" filename="TspSolver.java" line="329"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="71" desc="(I)I" key="4" label="relevant_sync_write" filename="TspSolver.java" line="178"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="200" desc="(I)I" key="5" label="relevant_sync_write" filename="TspSolver.java" line="224"/>
    </locations>
    <info>
      <message value="Accesses to field 'lower_bound' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.jpf_test_cases.readerswriters.Vector" name="elementData" type="[Ljava/lang/Object;" key="0" filename="Vector.java" line="7"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="copyInto" offset="7" desc="([Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="Vector.java" line="66"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="trimToSize" offset="1" desc="()V" key="2" label="relevant_sync_read" filename="Vector.java" line="78"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="trimToSize" offset="9" desc="()V" key="3" label="relevant_sync_read" filename="Vector.java" line="80"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="trimToSize" offset="20" desc="()V" key="4" label="relevant_sync_read" filename="Vector.java" line="82"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="ensureCapacity" offset="1" desc="(I)V" key="5" label="relevant_sync_read" filename="Vector.java" line="95"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="ensureCapacity" offset="8" desc="(I)V" key="6" label="relevant_sync_read" filename="Vector.java" line="97"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="ensureCapacity" offset="35" desc="(I)V" key="7" label="relevant_sync_read" filename="Vector.java" line="104"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="setSize" offset="12" desc="(I)V" key="8" label="relevant_sync_read" filename="Vector.java" line="122"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="capacity" offset="1" desc="()I" key="9" label="relevant_unsync_read" filename="Vector.java" line="135"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="indexOf" offset="5" desc="(Ljava/lang/Object;I)I" key="10" label="relevant_sync_read" filename="Vector.java" line="202"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="lastIndexOf" offset="5" desc="(Ljava/lang/Object;I)I" key="11" label="relevant_sync_read" filename="Vector.java" line="235"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="elementAt" offset="20" desc="(I)Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Vector.java" line="261"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="firstElement" offset="8" desc="()Ljava/lang/Object;" key="13" label="relevant_sync_read" filename="Vector.java" line="278"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="lastElement" offset="8" desc="()Ljava/lang/Object;" key="14" label="relevant_sync_read" filename="Vector.java" line="293"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="setElementAt" offset="20" desc="(Ljava/lang/Object;I)V" key="15" label="relevant_sync_read" filename="Vector.java" line="315"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="37" desc="(I)V" key="16" label="relevant_sync_read" filename="Vector.java" line="342"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="53" desc="(I)V" key="17" label="relevant_sync_read" filename="Vector.java" line="345"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="29" desc="(Ljava/lang/Object;I)V" key="18" label="relevant_sync_read" filename="Vector.java" line="370"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="42" desc="(Ljava/lang/Object;I)V" key="19" label="relevant_sync_read" filename="Vector.java" line="371"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="addElement" offset="7" desc="(Ljava/lang/Object;)V" key="20" label="relevant_sync_read" filename="Vector.java" line="386"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeAllElements" offset="4" desc="()V" key="21" label="relevant_sync_read" filename="Vector.java" line="416"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="clone" offset="11" desc="()Ljava/lang/Object;" key="22" label="relevant_sync_read" filename="Vector.java" line="431"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="&lt;init&gt;" offset="5" desc="(II)V" key="23" label="irrelevant_unsync_write" filename="Vector.java" line="33"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="trimToSize" offset="15" desc="()V" key="24" label="relevant_sync_write" filename="Vector.java" line="81"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="ensureCapacity" offset="30" desc="(I)V" key="25" label="relevant_sync_write" filename="Vector.java" line="103"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="clone" offset="8" desc="()Ljava/lang/Object;" key="26" label="relevant_sync_write" filename="Vector.java" line="430"/>
      <class name="benchmarks.jpf_test_cases.readerswriters.Vector" key="27" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'elementData' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="27" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="24" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.tsp.TspSolver" name="TourStackTop" type="I" key="0" filename="TspSolver.java" line="16"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="110" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="Tsp.java" line="74"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="6" desc="(II)I" key="2" label="relevant_sync_read" filename="TspSolver.java" line="70"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="9" desc="(II)I" key="3" label="relevant_sync_read" filename="TspSolver.java" line="71"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="22" desc="(II)I" key="4" label="relevant_sync_read" filename="TspSolver.java" line="73"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="73" desc="(I)I" key="5" label="relevant_sync_read" filename="TspSolver.java" line="180"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="134" desc="()I" key="6" label="relevant_sync_read" filename="TspSolver.java" line="443"/>
      <instruction className="benchmarks.tsp.TspSolver" method="get_tour" offset="8" desc="(I)I" key="7" label="relevant_sync_read" filename="TspSolver.java" line="458"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="31" desc="([Ljava/lang/String;)V" key="8" label="relevant_unsync_write" filename="Tsp.java" line="44"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="114" desc="([Ljava/lang/String;)V" key="9" label="relevant_unsync_write" filename="Tsp.java" line="74"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="13" desc="(II)I" key="10" label="relevant_sync_write" filename="TspSolver.java" line="71"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="77" desc="(I)I" key="11" label="relevant_sync_write" filename="TspSolver.java" line="180"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="138" desc="()I" key="12" label="relevant_sync_write" filename="TspSolver.java" line="443"/>
      <instruction className="benchmarks.tsp.TspSolver" method="get_tour" offset="12" desc="(I)I" key="13" label="relevant_sync_write" filename="TspSolver.java" line="458"/>
      <field className="benchmarks.tsp.TspSolver" name="TourLock" type="Ljava/lang/Integer;" key="14" label="guard_field" filename="TspSolver.java" line="22"/>
    </locations>
    <info>
      <message value="Accesses to field 'TourStackTop' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="14"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Vector" name="elementCount" type="I" key="0" filename="Vector.java" line="84"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="&lt;init&gt;" offset="8" desc="(Lbenchmarks/instrumented/java/util/Collection;)V" key="1" label="irrelevant_unsync_read" filename="Vector.java" line="153"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="copyInto" offset="6" desc="([Ljava/lang/Object;)V" key="2" label="relevant_sync_read" filename="Vector.java" line="168"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="trimToSize" offset="11" desc="()V" key="3" label="relevant_sync_read" filename="Vector.java" line="182"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="trimToSize" offset="19" desc="()V" key="4" label="relevant_sync_read" filename="Vector.java" line="184"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="trimToSize" offset="28" desc="()V" key="5" label="relevant_sync_read" filename="Vector.java" line="185"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="ensureCapacityHelper" offset="37" desc="(I)V" key="6" label="relevant_sync_read" filename="Vector.java" line="229"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setSize" offset="8" desc="(I)V" key="7" label="relevant_sync_read" filename="Vector.java" line="244"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setSize" offset="25" desc="(I)V" key="8" label="relevant_sync_read" filename="Vector.java" line="247"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="size" offset="1" desc="()I" key="9" label="relevant_sync_read" filename="Vector.java" line="271"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="isEmpty" offset="1" desc="()Z" key="10" label="relevant_sync_read" filename="Vector.java" line="282"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="hasMoreElements" offset="4" desc="()Z" key="11" label="relevant_unsync_read" filename="Vector.java" line="300"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="nextElement" offset="9" desc="()Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Vector.java" line="305"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="indexOf" offset="15" desc="(Ljava/lang/Object;I)I" key="13" label="relevant_sync_read" filename="Vector.java" line="360"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="indexOf" offset="33" desc="(Ljava/lang/Object;I)I" key="14" label="relevant_sync_read" filename="Vector.java" line="364"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastIndexOf" offset="3" desc="(Ljava/lang/Object;)I" key="15" label="relevant_sync_read" filename="Vector.java" line="382"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastIndexOf" offset="2" desc="(Ljava/lang/Object;I)I" key="16" label="relevant_sync_read" filename="Vector.java" line="401"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastIndexOf" offset="14" desc="(Ljava/lang/Object;I)I" key="17" label="relevant_sync_read" filename="Vector.java" line="402"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="elementAt" offset="2" desc="(I)Ljava/lang/Object;" key="18" label="relevant_sync_read" filename="Vector.java" line="432"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="elementAt" offset="14" desc="(I)Ljava/lang/Object;" key="19" label="relevant_sync_read" filename="Vector.java" line="433"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="firstElement" offset="1" desc="()Ljava/lang/Object;" key="20" label="relevant_sync_read" filename="Vector.java" line="447"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastElement" offset="1" desc="()Ljava/lang/Object;" key="21" label="relevant_sync_read" filename="Vector.java" line="461"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastElement" offset="10" desc="()Ljava/lang/Object;" key="22" label="relevant_sync_read" filename="Vector.java" line="464"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setElementAt" offset="2" desc="(Ljava/lang/Object;I)V" key="23" label="relevant_sync_read" filename="Vector.java" line="489"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setElementAt" offset="14" desc="(Ljava/lang/Object;I)V" key="24" label="relevant_sync_read" filename="Vector.java" line="491"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="8" desc="(I)V" key="25" label="relevant_sync_read" filename="Vector.java" line="518"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="20" desc="(I)V" key="26" label="relevant_sync_read" filename="Vector.java" line="520"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="33" desc="(I)V" key="27" label="relevant_sync_read" filename="Vector.java" line="525"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="53" desc="(I)V" key="28" label="relevant_sync_read" filename="Vector.java" line="529"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="60" desc="(I)V" key="29" label="relevant_sync_read" filename="Vector.java" line="530"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="8" desc="(Ljava/lang/Object;I)V" key="30" label="relevant_sync_read" filename="Vector.java" line="558"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="20" desc="(Ljava/lang/Object;I)V" key="31" label="relevant_sync_read" filename="Vector.java" line="560"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="27" desc="(Ljava/lang/Object;I)V" key="32" label="relevant_sync_read" filename="Vector.java" line="562"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="40" desc="(Ljava/lang/Object;I)V" key="33" label="relevant_sync_read" filename="Vector.java" line="563"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="51" desc="(Ljava/lang/Object;I)V" key="34" label="relevant_sync_read" filename="Vector.java" line="565"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addElement" offset="8" desc="(Ljava/lang/Object;)V" key="35" label="relevant_sync_read" filename="Vector.java" line="582"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addElement" offset="16" desc="(Ljava/lang/Object;)V" key="36" label="relevant_sync_read" filename="Vector.java" line="583"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeAllElements" offset="17" desc="()V" key="37" label="relevant_sync_read" filename="Vector.java" line="624"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="clone" offset="6" desc="()Ljava/lang/Object;" key="38" label="relevant_sync_read" filename="Vector.java" line="640"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="clone" offset="16" desc="()Ljava/lang/Object;" key="39" label="relevant_sync_read" filename="Vector.java" line="641"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="1" desc="()[Ljava/lang/Object;" key="40" label="relevant_sync_read" filename="Vector.java" line="657"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="10" desc="()[Ljava/lang/Object;" key="41" label="relevant_sync_read" filename="Vector.java" line="658"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="3" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="42" label="relevant_sync_read" filename="Vector.java" line="686"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="9" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="43" label="relevant_sync_read" filename="Vector.java" line="688"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="19" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="44" label="relevant_sync_read" filename="Vector.java" line="690"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="24" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="45" label="relevant_sync_read" filename="Vector.java" line="692"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="28" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="46" label="relevant_sync_read" filename="Vector.java" line="693"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="get" offset="2" desc="(I)Ljava/lang/Object;" key="47" label="relevant_sync_read" filename="Vector.java" line="710"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="set" offset="2" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="48" label="relevant_sync_read" filename="Vector.java" line="728"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="add" offset="8" desc="(Ljava/lang/Object;)Z" key="49" label="relevant_sync_read" filename="Vector.java" line="745"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="add" offset="16" desc="(Ljava/lang/Object;)Z" key="50" label="relevant_sync_read" filename="Vector.java" line="746"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="8" desc="(I)Ljava/lang/Object;" key="51" label="relevant_sync_read" filename="Vector.java" line="793"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="21" desc="(I)Ljava/lang/Object;" key="52" label="relevant_sync_read" filename="Vector.java" line="797"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="43" desc="(I)Ljava/lang/Object;" key="53" label="relevant_sync_read" filename="Vector.java" line="801"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="14" desc="(Lbenchmarks/instrumented/java/util/Collection;)Z" key="54" label="relevant_sync_read" filename="Vector.java" line="849"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="23" desc="(Lbenchmarks/instrumented/java/util/Collection;)Z" key="55" label="relevant_sync_read" filename="Vector.java" line="850"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="28" desc="(Lbenchmarks/instrumented/java/util/Collection;)Z" key="56" label="relevant_sync_read" filename="Vector.java" line="851"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="10" desc="(ILbenchmarks/instrumented/java/util/Collection;)Z" key="57" label="relevant_sync_read" filename="Vector.java" line="902"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="25" desc="(ILbenchmarks/instrumented/java/util/Collection;)Z" key="58" label="relevant_sync_read" filename="Vector.java" line="907"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="30" desc="(ILbenchmarks/instrumented/java/util/Collection;)Z" key="59" label="relevant_sync_read" filename="Vector.java" line="909"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="55" desc="(ILbenchmarks/instrumented/java/util/Collection;)Z" key="60" label="relevant_sync_read" filename="Vector.java" line="915"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="7" desc="(II)V" key="61" label="relevant_unsync_read" filename="Vector.java" line="1001"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="20" desc="(II)V" key="62" label="relevant_unsync_read" filename="Vector.java" line="1006"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="39" desc="(II)V" key="63" label="relevant_unsync_read" filename="Vector.java" line="1007"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="31" desc="(II)V" key="64" label="relevant_unsync_read" filename="Vector.java" line="1008"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="&lt;init&gt;" offset="5" desc="(Lbenchmarks/instrumented/java/util/Collection;)V" key="65" label="irrelevant_unsync_write" filename="Vector.java" line="150"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setSize" offset="29" desc="(I)V" key="66" label="relevant_sync_write" filename="Vector.java" line="251"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="56" desc="(I)V" key="67" label="relevant_sync_write" filename="Vector.java" line="529"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="54" desc="(Ljava/lang/Object;I)V" key="68" label="relevant_sync_write" filename="Vector.java" line="565"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addElement" offset="20" desc="(Ljava/lang/Object;)V" key="69" label="relevant_sync_write" filename="Vector.java" line="583"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeAllElements" offset="21" desc="()V" key="70" label="relevant_sync_write" filename="Vector.java" line="627"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="add" offset="20" desc="(Ljava/lang/Object;)Z" key="71" label="relevant_sync_write" filename="Vector.java" line="746"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="47" desc="(I)Ljava/lang/Object;" key="72" label="relevant_sync_write" filename="Vector.java" line="801"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="31" desc="(Lbenchmarks/instrumented/java/util/Collection;)Z" key="73" label="relevant_sync_write" filename="Vector.java" line="851"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="58" desc="(ILbenchmarks/instrumented/java/util/Collection;)Z" key="74" label="relevant_sync_write" filename="Vector.java" line="915"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="35" desc="(II)V" key="75" label="relevant_unsync_write" filename="Vector.java" line="1008"/>
      <class name="benchmarks.instrumented.java.util.Vector" key="76" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'elementCount' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="76" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="24" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="27" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="28" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="29" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="30" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="31" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="32" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="33" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="34" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="35" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="36" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="37" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="38" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="39" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="40" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="41" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="42" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="43" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="44" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="45" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="46" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="47" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="48" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="49" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="50" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="51" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="52" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="53" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="54" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="55" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="56" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="57" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="58" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="59" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="60" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="61" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="62" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="63" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="64" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="65" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="66" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="67" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="68" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="69" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="70" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="71" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="72" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="73" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="74" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="75" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" name="_miss" type="J" key="0" filename="BlockingCache.java" line="501"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incMisses" offset="2" desc="()V" key="1" label="irrelevant_sync_read" filename="BlockingCache.java" line="509"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="getCacheMisses" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="BlockingCache.java" line="521"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="toString" offset="10" desc="()Ljava/lang/String;" key="3" label="relevant_unsync_read" filename="BlockingCache.java" line="539"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incMisses" offset="5" desc="()V" key="4" label="irrelevant_sync_write" filename="BlockingCache.java" line="509"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="reset" offset="5" desc="()V" key="5" label="relevant_sync_write" filename="BlockingCache.java" line="531"/>
      <class name="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" key="6" label="guard_type" filename="BlockingCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_miss' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="6" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Vector" name="elementData" type="[Ljava/lang/Object;" key="0" filename="Vector.java" line="75"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="&lt;init&gt;" offset="21" desc="(Lbenchmarks/instrumented/java/util/Collection;)V" key="1" label="irrelevant_unsync_read" filename="Vector.java" line="154"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="copyInto" offset="1" desc="([Ljava/lang/Object;)V" key="2" label="relevant_sync_read" filename="Vector.java" line="168"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="trimToSize" offset="7" desc="()V" key="3" label="relevant_sync_read" filename="Vector.java" line="181"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="trimToSize" offset="15" desc="()V" key="4" label="relevant_sync_read" filename="Vector.java" line="183"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="trimToSize" offset="25" desc="()V" key="5" label="relevant_sync_read" filename="Vector.java" line="185"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="ensureCapacityHelper" offset="1" desc="(I)V" key="6" label="relevant_sync_read" filename="Vector.java" line="220"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="ensureCapacityHelper" offset="8" desc="(I)V" key="7" label="relevant_sync_read" filename="Vector.java" line="222"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="ensureCapacityHelper" offset="34" desc="(I)V" key="8" label="relevant_sync_read" filename="Vector.java" line="229"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setSize" offset="18" desc="(I)V" key="9" label="relevant_sync_read" filename="Vector.java" line="248"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="capacity" offset="1" desc="()I" key="10" label="relevant_sync_read" filename="Vector.java" line="262"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="nextElement" offset="13" desc="()Ljava/lang/Object;" key="11" label="relevant_sync_read" filename="Vector.java" line="306"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="indexOf" offset="6" desc="(Ljava/lang/Object;I)I" key="12" label="relevant_sync_read" filename="Vector.java" line="361"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="indexOf" offset="23" desc="(Ljava/lang/Object;I)I" key="13" label="relevant_sync_read" filename="Vector.java" line="365"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastIndexOf" offset="25" desc="(Ljava/lang/Object;I)I" key="14" label="relevant_sync_read" filename="Vector.java" line="406"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastIndexOf" offset="40" desc="(Ljava/lang/Object;I)I" key="15" label="relevant_sync_read" filename="Vector.java" line="410"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="elementAt" offset="20" desc="(I)Ljava/lang/Object;" key="16" label="relevant_sync_read" filename="Vector.java" line="436"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="firstElement" offset="8" desc="()Ljava/lang/Object;" key="17" label="relevant_sync_read" filename="Vector.java" line="450"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastElement" offset="8" desc="()Ljava/lang/Object;" key="18" label="relevant_sync_read" filename="Vector.java" line="464"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setElementAt" offset="20" desc="(Ljava/lang/Object;I)V" key="19" label="relevant_sync_read" filename="Vector.java" line="493"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="42" desc="(I)V" key="20" label="relevant_sync_read" filename="Vector.java" line="527"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="58" desc="(I)V" key="21" label="relevant_sync_read" filename="Vector.java" line="530"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="32" desc="(Ljava/lang/Object;I)V" key="22" label="relevant_sync_read" filename="Vector.java" line="563"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="45" desc="(Ljava/lang/Object;I)V" key="23" label="relevant_sync_read" filename="Vector.java" line="564"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addElement" offset="13" desc="(Ljava/lang/Object;)V" key="24" label="relevant_sync_read" filename="Vector.java" line="583"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeAllElements" offset="10" desc="()V" key="25" label="relevant_sync_read" filename="Vector.java" line="625"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="clone" offset="10" desc="()Ljava/lang/Object;" key="26" label="relevant_sync_read" filename="Vector.java" line="641"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="5" desc="()[Ljava/lang/Object;" key="27" label="relevant_sync_read" filename="Vector.java" line="658"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="toArray" offset="14" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" key="28" label="relevant_sync_read" filename="Vector.java" line="690"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="get" offset="10" desc="(I)Ljava/lang/Object;" key="29" label="relevant_sync_read" filename="Vector.java" line="713"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="set" offset="10" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="30" label="relevant_sync_read" filename="Vector.java" line="731"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="set" offset="15" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="31" label="relevant_sync_read" filename="Vector.java" line="732"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="add" offset="13" desc="(Ljava/lang/Object;)Z" key="32" label="relevant_sync_read" filename="Vector.java" line="746"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="16" desc="(I)Ljava/lang/Object;" key="33" label="relevant_sync_read" filename="Vector.java" line="795"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="30" desc="(I)Ljava/lang/Object;" key="34" label="relevant_sync_read" filename="Vector.java" line="799"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="40" desc="(I)Ljava/lang/Object;" key="35" label="relevant_sync_read" filename="Vector.java" line="801"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="21" desc="(Lbenchmarks/instrumented/java/util/Collection;)Z" key="36" label="relevant_sync_read" filename="Vector.java" line="850"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="37" desc="(ILbenchmarks/instrumented/java/util/Collection;)Z" key="37" label="relevant_sync_read" filename="Vector.java" line="911"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addAll" offset="49" desc="(ILbenchmarks/instrumented/java/util/Collection;)Z" key="38" label="relevant_sync_read" filename="Vector.java" line="914"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="12" desc="(II)V" key="39" label="relevant_unsync_read" filename="Vector.java" line="1002"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="28" desc="(II)V" key="40" label="relevant_unsync_read" filename="Vector.java" line="1008"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="&lt;init&gt;" offset="18" desc="(II)V" key="41" label="irrelevant_unsync_write" filename="Vector.java" line="114"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="&lt;init&gt;" offset="18" desc="(Lbenchmarks/instrumented/java/util/Collection;)V" key="42" label="irrelevant_unsync_write" filename="Vector.java" line="152"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="trimToSize" offset="21" desc="()V" key="43" label="relevant_sync_write" filename="Vector.java" line="184"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="ensureCapacityHelper" offset="30" desc="(I)V" key="44" label="relevant_sync_write" filename="Vector.java" line="228"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="clone" offset="8" desc="()Ljava/lang/Object;" key="45" label="relevant_sync_write" filename="Vector.java" line="640"/>
      <class name="benchmarks.instrumented.java.util.Vector" key="46" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'elementData' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="46" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="24" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="27" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="28" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="29" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="30" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="31" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="32" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="33" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="34" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="35" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="36" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="37" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="38" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="39" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="40" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="41" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="42" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="43" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="44" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="45" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="contest.mergesort.MergeSort" name="m_iCurrentThreadsAlive" type="I" key="0" filename="MergeSort.java" line="329"/>
      <instruction className="contest.mergesort.MergeSort" method="IncreaseThreadCounter" offset="0" desc="()V" key="1" label="relevant_sync_read" filename="MergeSort.java" line="32"/>
      <instruction className="contest.mergesort.MergeSort" method="DecreaseThreadCounter" offset="0" desc="()V" key="2" label="relevant_sync_read" filename="MergeSort.java" line="41"/>
      <instruction className="contest.mergesort.MergeSort" method="AvailableThreadsState" offset="1" desc="()I" key="3" label="relevant_sync_read" filename="MergeSort.java" line="48"/>
      <instruction className="contest.mergesort.MergeSort" method="IncreaseThreadCounter" offset="3" desc="()V" key="4" label="relevant_sync_write" filename="MergeSort.java" line="32"/>
      <instruction className="contest.mergesort.MergeSort" method="DecreaseThreadCounter" offset="3" desc="()V" key="5" label="relevant_sync_write" filename="MergeSort.java" line="41"/>
      <instruction className="contest.mergesort.MergeSort" method="ResetThreadCounter" offset="1" desc="()V" key="6" label="relevant_unsync_write" filename="MergeSort.java" line="98"/>
      <class name="contest.mergesort.MergeSort" key="7" label="guard" filename="MergeSort.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'm_iCurrentThreadsAlive' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="7"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" name="array_" type="[Ljava/lang/Object;" key="0" filename="CopyOnWriteArrayList.java" line="86"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="array" offset="1" desc="()[Ljava/lang/Object;" key="1" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="92"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="&lt;init&gt;" offset="14" desc="(Ljava/util/Collection;)V" key="2" label="irrelevant_unsync_read" filename="CopyOnWriteArrayList.java" line="112"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="copyIn" offset="7" desc="([Ljava/lang/Object;II)V" key="3" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="138"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="clone" offset="15" desc="()Ljava/lang/Object;" key="4" label="relevant_unsync_read" filename="CopyOnWriteArrayList.java" line="303"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="set" offset="1" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="385"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="set" offset="9" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="387"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="set" offset="32" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="393"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="add" offset="1" desc="(Ljava/lang/Object;)Z" key="8" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="407"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="add" offset="10" desc="(Ljava/lang/Object;)Z" key="9" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="409"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="add" offset="1" desc="(ILjava/lang/Object;)V" key="10" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="426"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="add" offset="30" desc="(ILjava/lang/Object;)V" key="11" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="431"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="add" offset="41" desc="(ILjava/lang/Object;)V" key="12" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="433"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="1" desc="(I)Ljava/lang/Object;" key="13" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="447"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="9" desc="(I)Ljava/lang/Object;" key="14" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="449"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="19" desc="(I)Ljava/lang/Object;" key="15" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="451"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="34" desc="(I)Ljava/lang/Object;" key="16" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="454"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="1" desc="(Ljava/lang/Object;)Z" key="17" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="472"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="20" desc="(Ljava/lang/Object;)Z" key="18" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="482"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="28" desc="(Ljava/lang/Object;)Z" key="19" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="483"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="43" desc="(Ljava/lang/Object;)Z" key="20" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="485"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="59" desc="(Ljava/lang/Object;)Z" key="21" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="490"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="69" desc="(Ljava/lang/Object;)Z" key="22" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="494"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="77" desc="(Ljava/lang/Object;)Z" key="23" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="495"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="removeRange" offset="1" desc="(II)V" key="24" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="519"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="removeRange" offset="33" desc="(II)V" key="25" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="528"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="removeRange" offset="40" desc="(II)V" key="26" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="529"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addIfAbsent" offset="1" desc="(Ljava/lang/Object;)Z" key="27" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="544"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addIfAbsent" offset="14" desc="(Ljava/lang/Object;)Z" key="28" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="547"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addIfAbsent" offset="22" desc="(Ljava/lang/Object;)Z" key="29" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="548"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addIfAbsent" offset="32" desc="(Ljava/lang/Object;)Z" key="30" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="551"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="removeAll" offset="1" desc="(Ljava/util/Collection;)Z" key="31" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="589"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="retainAll" offset="1" desc="(Ljava/util/Collection;)Z" key="32" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="620"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAllAbsent" offset="8" desc="(Ljava/util/Collection;)I" key="33" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="655"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAll" offset="8" desc="(Ljava/util/Collection;)Z" key="34" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="698"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAll" offset="17" desc="(Ljava/util/Collection;)Z" key="35" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="700"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAll" offset="1" desc="(ILjava/util/Collection;)Z" key="36" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="724"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAll" offset="37" desc="(ILjava/util/Collection;)Z" key="37" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="732"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAll" offset="50" desc="(ILjava/util/Collection;)Z" key="38" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="735"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="subList" offset="1" desc="(II)Ljava/util/List;" key="39" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1016"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="checkForComodification" offset="2" desc="()V" key="40" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1059"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="set" offset="22" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="41" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1076"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="add" offset="28" desc="(ILjava/lang/Object;)V" key="42" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1102"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="remove" offset="21" desc="(I)Ljava/lang/Object;" key="43" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1112"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="&lt;init&gt;" offset="5" desc="()V" key="44" label="irrelevant_unsync_write" filename="CopyOnWriteArrayList.java" line="99"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="&lt;init&gt;" offset="6" desc="(Ljava/util/Collection;)V" key="45" label="irrelevant_unsync_write" filename="CopyOnWriteArrayList.java" line="108"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="copyIn" offset="3" desc="([Ljava/lang/Object;II)V" key="46" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="137"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="clone" offset="11" desc="()Ljava/lang/Object;" key="47" label="relevant_unsync_write" filename="CopyOnWriteArrayList.java" line="302"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="set" offset="44" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="48" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="395"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="add" offset="22" desc="(Ljava/lang/Object;)Z" key="49" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="411"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="add" offset="53" desc="(ILjava/lang/Object;)V" key="50" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="434"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="44" desc="(I)Ljava/lang/Object;" key="51" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="455"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="53" desc="(Ljava/lang/Object;)Z" key="52" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="486"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="remove" offset="84" desc="(Ljava/lang/Object;)Z" key="53" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="496"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="removeRange" offset="48" desc="(II)V" key="54" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="530"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addIfAbsent" offset="46" desc="(Ljava/lang/Object;)Z" key="55" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="554"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="removeAll" offset="51" desc="(Ljava/util/Collection;)Z" key="56" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="608"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="retainAll" offset="51" desc="(Ljava/util/Collection;)Z" key="57" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="637"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAllAbsent" offset="66" desc="(Ljava/util/Collection;)I" key="58" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="675"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="clear" offset="3" desc="()V" key="59" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="684"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAll" offset="41" desc="(Ljava/util/Collection;)Z" key="60" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="704"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" method="addAll" offset="76" desc="(ILjava/util/Collection;)Z" key="61" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="739"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList" key="62" label="guard_type" filename="CopyOnWriteArrayList.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'array_' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="62" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="24" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="27" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="28" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="29" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="30" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="31" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="32" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="33" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="34" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="35" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="36" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="37" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="38" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="39" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="40" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="41" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="42" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="43" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="44" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="45" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="46" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="47" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="48" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="49" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="50" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="51" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="52" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="53" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="54" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="55" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="56" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="57" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="58" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="59" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="60" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="61" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" name="_remove" type="J" key="0" filename="BlockingCache.java" line="503"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incRemove" offset="2" desc="()V" key="1" label="irrelevant_sync_read" filename="BlockingCache.java" line="515"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="getTotalRemoves" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="BlockingCache.java" line="527"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="incRemove" offset="5" desc="()V" key="3" label="irrelevant_sync_write" filename="BlockingCache.java" line="515"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="reset" offset="11" desc="()V" key="4" label="relevant_sync_write" filename="BlockingCache.java" line="533"/>
      <class name="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" key="5" label="guard_type" filename="BlockingCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_remove' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="5" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="irrelevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_MIXED">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" name="putSidePutPermits_" type="I" key="0" filename="BoundedLinkedQueue.java" line="100"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="reconcilePutPermits" offset="2" desc="()I" key="1" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="132"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="reconcilePutPermits" offset="11" desc="()I" key="2" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="134"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="size" offset="5" desc="()I" key="3" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="156"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="insert" offset="2" desc="(Ljava/lang/Object;)V" key="4" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="272"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="put" offset="18" desc="(Ljava/lang/Object;)V" key="5" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="291"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="offer" offset="18" desc="(Ljava/lang/Object;J)Z" key="6" label="relevant_sync_read" filename="BoundedLinkedQueue.java" line="321"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="&lt;init&gt;" offset="26" desc="(I)V" key="7" label="irrelevant_unsync_write" filename="BoundedLinkedQueue.java" line="113"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="reconcilePutPermits" offset="6" desc="()I" key="8" label="relevant_sync_write" filename="BoundedLinkedQueue.java" line="132"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="insert" offset="5" desc="(Ljava/lang/Object;)V" key="9" label="relevant_sync_write" filename="BoundedLinkedQueue.java" line="272"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" key="10" label="guard_type" filename="BoundedLinkedQueue.java"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" name="putGuard_" type="Ljava/lang/Object;" key="11" label="guard_field" filename="BoundedLinkedQueue.java" line="73"/>
    </locations>
    <info>
      <message value="Access to field 'putSidePutPermits_' are synchronized using different locks."/>
      <guards>
        <guardRelative typeRef="10" key="1" intrinsic="true">
          <guardPath>
            <locationRef key="11"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
        <guardRelative typeRef="10" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.stringbuffer.StringBuffer" name="value" type="[C" key="0" filename="StringBuffer.java" line="81"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="capacity" offset="1" desc="()I" key="1" label="relevant_sync_read" filename="StringBuffer.java" line="154"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="copy" offset="1" desc="()V" key="2" label="relevant_sync_read" filename="StringBuffer.java" line="162"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="copy" offset="6" desc="()V" key="3" label="relevant_sync_read" filename="StringBuffer.java" line="163"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="ensureCapacity" offset="2" desc="(I)V" key="4" label="relevant_sync_read" filename="StringBuffer.java" line="184"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="expandCapacity" offset="1" desc="(I)V" key="5" label="relevant_sync_read" filename="StringBuffer.java" line="197"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="expandCapacity" offset="22" desc="(I)V" key="6" label="relevant_sync_read" filename="StringBuffer.java" line="205"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="setLength" offset="9" desc="(I)V" key="7" label="relevant_sync_read" filename="StringBuffer.java" line="243"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="setLength" offset="26" desc="(I)V" key="8" label="relevant_sync_read" filename="StringBuffer.java" line="250"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="charAt" offset="12" desc="(I)C" key="9" label="relevant_sync_read" filename="StringBuffer.java" line="287"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="getChars" offset="27" desc="(II[CI)V" key="10" label="relevant_sync_read" filename="StringBuffer.java" line="331"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="setCharAt" offset="17" desc="(IC)V" key="11" label="relevant_sync_read" filename="StringBuffer.java" line="355"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="15" desc="(Ljava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="12" label="relevant_sync_read" filename="StringBuffer.java" line="402"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="25" desc="(Ljava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="13" label="relevant_sync_read" filename="StringBuffer.java" line="404"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="14" desc="(Lbenchmarks/stringbuffer/StringBuffer;)Lbenchmarks/stringbuffer/StringBuffer;" key="14" label="relevant_sync_read" filename="StringBuffer.java" line="443"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="24" desc="(Lbenchmarks/stringbuffer/StringBuffer;)Lbenchmarks/stringbuffer/StringBuffer;" key="15" label="relevant_sync_read" filename="StringBuffer.java" line="446"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="10" desc="([C)Lbenchmarks/stringbuffer/StringBuffer;" key="16" label="relevant_sync_read" filename="StringBuffer.java" line="472"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="19" desc="([C)Lbenchmarks/stringbuffer/StringBuffer;" key="17" label="relevant_sync_read" filename="StringBuffer.java" line="474"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="7" desc="([CII)Lbenchmarks/stringbuffer/StringBuffer;" key="18" label="relevant_sync_read" filename="StringBuffer.java" line="500"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="16" desc="([CII)Lbenchmarks/stringbuffer/StringBuffer;" key="19" label="relevant_sync_read" filename="StringBuffer.java" line="502"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="9" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="20" label="relevant_sync_read" filename="StringBuffer.java" line="523"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="16" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="21" label="relevant_sync_read" filename="StringBuffer.java" line="525"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="27" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="22" label="relevant_sync_read" filename="StringBuffer.java" line="526"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="38" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="23" label="relevant_sync_read" filename="StringBuffer.java" line="527"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="49" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="24" label="relevant_sync_read" filename="StringBuffer.java" line="528"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="67" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="25" label="relevant_sync_read" filename="StringBuffer.java" line="531"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="74" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="26" label="relevant_sync_read" filename="StringBuffer.java" line="533"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="85" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="27" label="relevant_sync_read" filename="StringBuffer.java" line="534"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="96" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="28" label="relevant_sync_read" filename="StringBuffer.java" line="535"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="107" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="29" label="relevant_sync_read" filename="StringBuffer.java" line="536"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="118" desc="(Z)Lbenchmarks/stringbuffer/StringBuffer;" key="30" label="relevant_sync_read" filename="StringBuffer.java" line="537"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="7" desc="(C)Lbenchmarks/stringbuffer/StringBuffer;" key="31" label="relevant_sync_read" filename="StringBuffer.java" line="559"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="append" offset="14" desc="(C)Lbenchmarks/stringbuffer/StringBuffer;" key="32" label="relevant_sync_read" filename="StringBuffer.java" line="561"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="delete" offset="33" desc="(II)Lbenchmarks/stringbuffer/StringBuffer;" key="33" label="relevant_sync_read" filename="StringBuffer.java" line="664"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="deleteCharAt" offset="16" desc="(I)Lbenchmarks/stringbuffer/StringBuffer;" key="34" label="relevant_sync_read" filename="StringBuffer.java" line="687"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="replace" offset="35" desc="(IILjava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="35" label="relevant_sync_read" filename="StringBuffer.java" line="722"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="replace" offset="48" desc="(IILjava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="36" label="relevant_sync_read" filename="StringBuffer.java" line="727"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="replace" offset="64" desc="(IILjava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="37" label="relevant_sync_read" filename="StringBuffer.java" line="728"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="substring" offset="29" desc="(II)Ljava/lang/String;" key="38" label="relevant_sync_read" filename="StringBuffer.java" line="804"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="41" desc="(I[CII)Lbenchmarks/stringbuffer/StringBuffer;" key="39" label="relevant_sync_read" filename="StringBuffer.java" line="838"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="54" desc="(I[CII)Lbenchmarks/stringbuffer/StringBuffer;" key="40" label="relevant_sync_read" filename="StringBuffer.java" line="842"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="69" desc="(I[CII)Lbenchmarks/stringbuffer/StringBuffer;" key="41" label="relevant_sync_read" filename="StringBuffer.java" line="843"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="25" desc="(ILjava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="42" label="relevant_sync_read" filename="StringBuffer.java" line="915"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="38" desc="(ILjava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="43" label="relevant_sync_read" filename="StringBuffer.java" line="919"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="54" desc="(ILjava/lang/String;)Lbenchmarks/stringbuffer/StringBuffer;" key="44" label="relevant_sync_read" filename="StringBuffer.java" line="920"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="20" desc="(I[C)Lbenchmarks/stringbuffer/StringBuffer;" key="45" label="relevant_sync_read" filename="StringBuffer.java" line="952"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="33" desc="(I[C)Lbenchmarks/stringbuffer/StringBuffer;" key="46" label="relevant_sync_read" filename="StringBuffer.java" line="956"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="48" desc="(I[C)Lbenchmarks/stringbuffer/StringBuffer;" key="47" label="relevant_sync_read" filename="StringBuffer.java" line="957"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="7" desc="(IC)Lbenchmarks/stringbuffer/StringBuffer;" key="48" label="relevant_sync_read" filename="StringBuffer.java" line="1013"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="20" desc="(IC)Lbenchmarks/stringbuffer/StringBuffer;" key="49" label="relevant_sync_read" filename="StringBuffer.java" line="1017"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="insert" offset="33" desc="(IC)Lbenchmarks/stringbuffer/StringBuffer;" key="50" label="relevant_sync_read" filename="StringBuffer.java" line="1018"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="reverse" offset="18" desc="()Lbenchmarks/stringbuffer/StringBuffer;" key="51" label="relevant_sync_read" filename="StringBuffer.java" line="1231"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="reverse" offset="23" desc="()Lbenchmarks/stringbuffer/StringBuffer;" key="52" label="relevant_sync_read" filename="StringBuffer.java" line="1232"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="reverse" offset="33" desc="()Lbenchmarks/stringbuffer/StringBuffer;" key="53" label="relevant_sync_read" filename="StringBuffer.java" line="1233"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="toString" offset="3" desc="()Ljava/lang/String;" key="54" label="relevant_unsync_read" filename="StringBuffer.java" line="1258"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="getValue" offset="1" desc="()[C" key="55" label="irrelevant_unsync_read" filename="StringBuffer.java" line="1266"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="&lt;init&gt;" offset="5" desc="(I)V" key="56" label="irrelevant_unsync_write" filename="StringBuffer.java" line="117"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="copy" offset="15" desc="()V" key="57" label="relevant_sync_write" filename="StringBuffer.java" line="164"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="expandCapacity" offset="31" desc="(I)V" key="58" label="relevant_sync_write" filename="StringBuffer.java" line="206"/>
      <instruction className="benchmarks.stringbuffer.StringBuffer" method="setLength" offset="56" desc="(I)V" key="59" label="relevant_sync_write" filename="StringBuffer.java" line="260"/>
      <class name="benchmarks.stringbuffer.StringBuffer" key="60" label="guard_type" filename="StringBuffer.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'value' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="60" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="24" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="27" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="28" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="29" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="30" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="31" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="32" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="33" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="34" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="35" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="36" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="37" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="38" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="39" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="40" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="41" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="42" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="43" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="44" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="45" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="46" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="47" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="48" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="49" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="50" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="51" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="52" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="53" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="54" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="55" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="56" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="57" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="58" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="59" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache" name="_memorySize" type="J" key="0" filename="SynchronizedCache.java" line="81"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="put" offset="63" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="SynchronizedCache.java" line="129"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="checkOverflow" offset="46" desc="(I)V" key="2" label="relevant_sync_read" filename="SynchronizedCache.java" line="283"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="resetCacheObject" offset="2" desc="(Lnet/sf/cache4j/impl/CacheObject;)V" key="3" label="relevant_sync_read" filename="SynchronizedCache.java" line="324"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="getMemorySize" offset="2" desc="()J" key="4" label="relevant_unsync_read" filename="SynchronizedCache.java" line="366"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="toString" offset="16" desc="()Ljava/lang/String;" key="5" label="relevant_unsync_read" filename="SynchronizedCache.java" line="369"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="put" offset="67" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="6" label="relevant_sync_write" filename="SynchronizedCache.java" line="129"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="clear" offset="8" desc="()V" key="7" label="relevant_sync_write" filename="SynchronizedCache.java" line="204"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="setCacheConfig" offset="28" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="8" label="relevant_sync_write" filename="SynchronizedCache.java" line="239"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="resetCacheObject" offset="6" desc="(Lnet/sf/cache4j/impl/CacheObject;)V" key="9" label="relevant_sync_write" filename="SynchronizedCache.java" line="324"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache" key="10" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_memorySize' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="10" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.jpf_test_cases.readerswriters.Vector" name="elementCount" type="I" key="0" filename="Vector.java" line="9"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="copyInto" offset="1" desc="([Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="Vector.java" line="64"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="trimToSize" offset="5" desc="()V" key="2" label="relevant_sync_read" filename="Vector.java" line="79"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="trimToSize" offset="13" desc="()V" key="3" label="relevant_sync_read" filename="Vector.java" line="81"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="trimToSize" offset="23" desc="()V" key="4" label="relevant_sync_read" filename="Vector.java" line="82"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="ensureCapacity" offset="38" desc="(I)V" key="5" label="relevant_sync_read" filename="Vector.java" line="104"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="setSize" offset="2" desc="(I)V" key="6" label="relevant_sync_read" filename="Vector.java" line="118"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="setSize" offset="19" desc="(I)V" key="7" label="relevant_sync_read" filename="Vector.java" line="121"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="size" offset="1" desc="()I" key="8" label="relevant_unsync_read" filename="Vector.java" line="145"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="isEmpty" offset="1" desc="()Z" key="9" label="relevant_unsync_read" filename="Vector.java" line="157"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="indexOf" offset="15" desc="(Ljava/lang/Object;I)I" key="10" label="relevant_sync_read" filename="Vector.java" line="201"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="lastIndexOf" offset="3" desc="(Ljava/lang/Object;)I" key="11" label="relevant_unsync_read" filename="Vector.java" line="219"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="elementAt" offset="2" desc="(I)Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Vector.java" line="252"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="elementAt" offset="14" desc="(I)Ljava/lang/Object;" key="13" label="relevant_sync_read" filename="Vector.java" line="253"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="firstElement" offset="1" desc="()Ljava/lang/Object;" key="14" label="relevant_sync_read" filename="Vector.java" line="275"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="lastElement" offset="1" desc="()Ljava/lang/Object;" key="15" label="relevant_sync_read" filename="Vector.java" line="290"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="lastElement" offset="10" desc="()Ljava/lang/Object;" key="16" label="relevant_sync_read" filename="Vector.java" line="293"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="setElementAt" offset="2" desc="(Ljava/lang/Object;I)V" key="17" label="relevant_sync_read" filename="Vector.java" line="311"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="setElementAt" offset="14" desc="(Ljava/lang/Object;I)V" key="18" label="relevant_sync_read" filename="Vector.java" line="313"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="2" desc="(I)V" key="19" label="relevant_sync_read" filename="Vector.java" line="333"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="14" desc="(I)V" key="20" label="relevant_sync_read" filename="Vector.java" line="335"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="27" desc="(I)V" key="21" label="relevant_sync_read" filename="Vector.java" line="340"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="48" desc="(I)V" key="22" label="relevant_sync_read" filename="Vector.java" line="344"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="55" desc="(I)V" key="23" label="relevant_sync_read" filename="Vector.java" line="345"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="2" desc="(Ljava/lang/Object;I)V" key="24" label="relevant_sync_read" filename="Vector.java" line="365"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="16" desc="(Ljava/lang/Object;I)V" key="25" label="relevant_sync_read" filename="Vector.java" line="367"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="23" desc="(Ljava/lang/Object;I)V" key="26" label="relevant_sync_read" filename="Vector.java" line="369"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="37" desc="(Ljava/lang/Object;I)V" key="27" label="relevant_sync_read" filename="Vector.java" line="370"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="48" desc="(Ljava/lang/Object;I)V" key="28" label="relevant_sync_read" filename="Vector.java" line="372"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="addElement" offset="2" desc="(Ljava/lang/Object;)V" key="29" label="relevant_sync_read" filename="Vector.java" line="385"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="addElement" offset="10" desc="(Ljava/lang/Object;)V" key="30" label="relevant_sync_read" filename="Vector.java" line="386"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeAllElements" offset="11" desc="()V" key="31" label="relevant_sync_read" filename="Vector.java" line="415"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="clone" offset="6" desc="()Ljava/lang/Object;" key="32" label="relevant_sync_read" filename="Vector.java" line="430"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="clone" offset="17" desc="()Ljava/lang/Object;" key="33" label="relevant_sync_read" filename="Vector.java" line="431"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="setSize" offset="23" desc="(I)V" key="34" label="relevant_sync_write" filename="Vector.java" line="125"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeElementAt" offset="51" desc="(I)V" key="35" label="relevant_sync_write" filename="Vector.java" line="344"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="insertElementAt" offset="51" desc="(Ljava/lang/Object;I)V" key="36" label="relevant_sync_write" filename="Vector.java" line="372"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="addElement" offset="14" desc="(Ljava/lang/Object;)V" key="37" label="relevant_sync_write" filename="Vector.java" line="386"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.Vector" method="removeAllElements" offset="15" desc="()V" key="38" label="relevant_sync_write" filename="Vector.java" line="418"/>
      <class name="benchmarks.jpf_test_cases.readerswriters.Vector" key="39" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'elementCount' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="39" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="24" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="27" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="28" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="29" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="30" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="31" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="32" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="33" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="34" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="35" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="36" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="37" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="38" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.instrumented.java.util.TimerThread" name="newTasksMayBeScheduled" type="Z" key="0" filename="Timer.java" line="365"/>
      <instruction className="benchmarks.instrumented.java.util.Timer" method="sched" offset="16" desc="(Lbenchmarks/instrumented/java/util/TimerTask;JJ)V" key="1" label="relevant_sync_read" filename="Timer.java" line="310"/>
      <method className="benchmarks.instrumented.java.util.TimerThread" name="run" desc="()V" key="2" label="async_entrypoint" filename="Timer.java" line="379"/>
      <instruction className="benchmarks.instrumented.java.util.TimerThread" method="mainLoop" offset="14" desc="()V" key="3" label="relevant_sync_read" filename="Timer.java" line="401"/>
      <instruction className="benchmarks.instrumented.java.util.Timer" method="cancel" offset="8" desc="()V" key="4" label="relevant_sync_write" filename="Timer.java" line="344"/>
      <instruction className="benchmarks.instrumented.java.util.TimerThread" method="&lt;init&gt;" offset="4" desc="(Lbenchmarks/instrumented/java/util/TaskQueue;)V" key="5" label="irrelevant_unsync_write" filename="Timer.java" line="365"/>
      <instruction className="benchmarks.instrumented.java.util.TimerThread" method="run" offset="30" desc="()V" key="6" label="relevant_sync_write" filename="Timer.java" line="385"/>
      <field className="benchmarks.instrumented.java.util.TimerThread" name="queue" type="Lbenchmarks/instrumented/java/util/TaskQueue;" key="7" label="guard_field" filename="Timer.java" line="373"/>
      <class name="benchmarks.instrumented.java.util.TimerThread" key="8" label="guard_type" filename="Timer.java"/>
      <field className="benchmarks.instrumented.java.util.Timer" name="queue" type="Lbenchmarks/instrumented/java/util/TaskQueue;" key="9" label="guard_field" filename="Timer.java" line="63"/>
      <field className="benchmarks.instrumented.java.util.Timer" name="thread" type="Lbenchmarks/instrumented/java/util/TimerThread;" key="10" label="target_field" filename="Timer.java" line="68"/>
      <class name="benchmarks.instrumented.java.util.Timer" key="11" label="guard_type" filename="Timer.java"/>
    </locations>
    <info>
      <message value="Field 'newTasksMayBeScheduled' is accessed from asynchronously invoked method without synchronization."/>
      <guards>
        <guardRelative typeRef="11" key="0" intrinsic="true">
          <guardPath>
            <locationRef key="9"/>
          </guardPath>
          <targetPath>
            <locationRef key="10"/>
          </targetPath>
        </guardRelative>
        <guardRelative typeRef="8" key="1" intrinsic="true">
          <guardPath>
            <locationRef key="7"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache" name="_config" type="Lnet/sf/cache4j/impl/CacheConfigImpl;" key="0" filename="SynchronizedCache.java" line="76"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="put" offset="10" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="SynchronizedCache.java" line="108"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="getCacheConfig" offset="1" desc="()Lnet/sf/cache4j/CacheConfig;" key="2" label="relevant_unsync_read" filename="SynchronizedCache.java" line="218"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="setCacheConfig" offset="13" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="3" label="relevant_sync_read" filename="SynchronizedCache.java" line="238"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="setCacheConfig" offset="33" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="4" label="relevant_sync_read" filename="SynchronizedCache.java" line="240"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="clean" offset="1" desc="()V" key="5" label="relevant_unsync_read" filename="SynchronizedCache.java" line="251"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="checkOverflow" offset="27" desc="(I)V" key="6" label="relevant_sync_read" filename="SynchronizedCache.java" line="282"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="checkOverflow" offset="40" desc="(I)V" key="7" label="relevant_sync_read" filename="SynchronizedCache.java" line="283"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="newCacheObject" offset="1" desc="(Ljava/lang/Object;)Lnet/sf/cache4j/impl/CacheObject;" key="8" label="relevant_sync_read" filename="SynchronizedCache.java" line="303"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="valid" offset="3" desc="(Lnet/sf/cache4j/impl/CacheObject;)Z" key="9" label="relevant_syncmixed_read" filename="SynchronizedCache.java" line="313"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="valid" offset="18" desc="(Lnet/sf/cache4j/impl/CacheObject;)Z" key="10" label="relevant_syncmixed_read" filename="SynchronizedCache.java" line="314"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="setCacheConfig" offset="10" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="11" label="relevant_sync_write" filename="SynchronizedCache.java" line="236"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache" key="12" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_config' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="12" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_syncmixed_read">
          <accessGuards>
            <guardRef key="0" status="sometimes"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="contest.bubblesort.BubbleSort" name="ob" type="[Lcontest/bubblesort/OneBubble;" key="0" filename="BubbleSort.java" line="29"/>
      <instruction className="contest.bubblesort.BubbleSort" method="Sort" offset="13" desc="()V" key="1" label="relevant_sync_read" filename="BubbleSort.java" line="80"/>
      <instruction className="contest.bubblesort.BubbleSort" method="Sort" offset="24" desc="()V" key="2" label="relevant_sync_read" filename="BubbleSort.java" line="81"/>
      <instruction className="contest.bubblesort.BubbleSort" method="Join" offset="4" desc="()V" key="3" label="relevant_unsync_read" filename="BubbleSort.java" line="91"/>
      <instruction className="contest.bubblesort.BubbleSort" method="&lt;init&gt;" offset="9" desc="([ILjava/io/File;I)V" key="4" label="irrelevant_unsync_write" filename="BubbleSort.java" line="29"/>
      <instruction className="contest.bubblesort.BubbleSort" method="Sort" offset="8" desc="()V" key="5" label="relevant_sync_write" filename="BubbleSort.java" line="77"/>
      <field className="contest.bubblesort.BubbleSort" name="sort_lock" type="Ljava/lang/Object;" key="6" label="guard_field" filename="BubbleSort.java" line="23"/>
    </locations>
    <info>
      <message value="Accesses to field 'ob' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="6"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Hashtable$Entry" name="value" type="Ljava/lang/Object;" key="0" filename="Hashtable.java" line="854"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="contains" offset="19" desc="(Ljava/lang/Object;)Z" key="1" label="relevant_sync_read" filename="Hashtable.java" line="275"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="get" offset="28" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="Hashtable.java" line="338"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="34" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="403"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="54" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="4" label="relevant_sync_read" filename="Hashtable.java" line="447"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="hashCode" offset="33" desc="()I" key="5" label="relevant_sync_read" filename="Hashtable.java" line="777"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="clone" offset="7" desc="()Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="865"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="getValue" offset="1" desc="()Ljava/lang/Object;" key="7" label="relevant_unsync_read" filename="Hashtable.java" line="876"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="setValue" offset="7" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="8" label="relevant_unsync_read" filename="Hashtable.java" line="883"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="equals" offset="22" desc="(Ljava/lang/Object;)Z" key="9" label="relevant_unsync_read" filename="Hashtable.java" line="894"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="hashCode" offset="3" desc="()I" key="10" label="relevant_unsync_read" filename="Hashtable.java" line="898"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="toString" offset="10" desc="()Ljava/lang/String;" key="11" label="relevant_unsync_read" filename="Hashtable.java" line="902"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="nextElement" offset="48" desc="()Ljava/lang/Object;" key="12" label="relevant_unsync_read" filename="Hashtable.java" line="969"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="38" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="13" label="relevant_sync_write" filename="Hashtable.java" line="404"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="58" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="14" label="relevant_sync_write" filename="Hashtable.java" line="448"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="68" desc="(Ljava/lang/Object;)Z" key="15" label="relevant_unsync_write" filename="Hashtable.java" line="659"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="&lt;init&gt;" offset="10" desc="(ILjava/lang/Object;Ljava/lang/Object;Lbenchmarks/instrumented/java/util/Hashtable$Entry;)V" key="16" label="irrelevant_unsync_write" filename="Hashtable.java" line="860"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Entry" method="setValue" offset="11" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="17" label="relevant_unsync_write" filename="Hashtable.java" line="884"/>
    </locations>
    <info>
      <message value="Accesses to field 'value' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="16" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="17" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.tsp.TspSolver" name="PrioQLast" type="I" key="0" filename="TspSolver.java" line="18"/>
      <instruction className="benchmarks.tsp.TspSolver" method="DumpPrioQ" offset="73" desc="()V" key="1" label="relevant_unsync_read" filename="TspSolver.java" line="253"/>
      <instruction className="benchmarks.tsp.TspSolver" method="DumpPrioQ" offset="30" desc="()V" key="2" label="relevant_unsync_read" filename="TspSolver.java" line="256"/>
      <instruction className="benchmarks.tsp.TspSolver" method="DumpPrioQ" offset="47" desc="()V" key="3" label="relevant_unsync_read" filename="TspSolver.java" line="258"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="74" desc="(I)V" key="4" label="relevant_sync_read" filename="TspSolver.java" line="318"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="82" desc="(I)V" key="5" label="relevant_sync_read" filename="TspSolver.java" line="319"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="88" desc="(I)V" key="6" label="relevant_sync_read" filename="TspSolver.java" line="326"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="141" desc="()I" key="7" label="relevant_sync_read" filename="TspSolver.java" line="375"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="28" desc="()I" key="8" label="relevant_sync_read" filename="TspSolver.java" line="390"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="39" desc="()I" key="9" label="relevant_sync_read" filename="TspSolver.java" line="393"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="105" desc="()I" key="10" label="relevant_sync_read" filename="TspSolver.java" line="396"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="61" desc="()I" key="11" label="relevant_sync_read" filename="TspSolver.java" line="405"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="105" desc="([Ljava/lang/String;)V" key="12" label="relevant_unsync_write" filename="Tsp.java" line="70"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="92" desc="(I)V" key="13" label="relevant_sync_write" filename="TspSolver.java" line="326"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="42" desc="()I" key="14" label="relevant_sync_write" filename="TspSolver.java" line="393"/>
      <field className="benchmarks.tsp.TspSolver" name="TourLock" type="Ljava/lang/Integer;" key="15" label="guard_field" filename="TspSolver.java" line="22"/>
    </locations>
    <info>
      <message value="Accesses to field 'PrioQLast' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="15"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.BlockingCache" name="_memorySize" type="J" key="0" filename="BlockingCache.java" line="99"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="put" offset="100" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="BlockingCache.java" line="199"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="checkOverflow" offset="68" desc="(I)V" key="2" label="relevant_sync_read" filename="BlockingCache.java" line="414"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="resetCacheObject" offset="6" desc="(Lnet/sf/cache4j/impl/CacheObject;)V" key="3" label="relevant_sync_read" filename="BlockingCache.java" line="494"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="getMemorySize" offset="2" desc="()J" key="4" label="relevant_unsync_read" filename="BlockingCache.java" line="536"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache$CacheInfoImpl" method="toString" offset="16" desc="()Ljava/lang/String;" key="5" label="relevant_unsync_read" filename="BlockingCache.java" line="539"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="put" offset="104" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="6" label="relevant_sync_write" filename="BlockingCache.java" line="199"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="setCacheConfig" offset="28" desc="(Lnet/sf/cache4j/CacheConfig;)V" key="7" label="relevant_sync_write" filename="BlockingCache.java" line="366"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="resetCacheObject" offset="10" desc="(Lnet/sf/cache4j/impl/CacheObject;)V" key="8" label="relevant_sync_write" filename="BlockingCache.java" line="494"/>
      <class name="net.sf.cache4j.impl.BlockingCache" key="9" label="guard_type" filename="BlockingCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_memorySize' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="9" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java.util.Hashtable" name="modCount" type="I" key="0" filename="Hashtable.java" line="139"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="18" desc="()V" key="1" label="relevant_sync_read" filename="Hashtable.java" line="358"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="48" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="Hashtable.java" line="409"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="31" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="440"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clear" offset="5" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="477"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="43" desc="(Ljava/lang/Object;)Z" key="5" label="relevant_unsync_read" filename="Hashtable.java" line="652"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="&lt;init&gt;" offset="22" desc="(Lbenchmarks/instrumented/java/util/Hashtable;IZ)V" key="6" label="relevant_unsync_read" filename="Hashtable.java" line="936"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="next" offset="2" desc="()Ljava/lang/Object;" key="7" label="relevant_unsync_read" filename="Hashtable.java" line="980"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="17" desc="()V" key="8" label="relevant_unsync_read" filename="Hashtable.java" line="990"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="57" desc="()V" key="9" label="relevant_sync_read" filename="Hashtable.java" line="1000"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="&lt;init&gt;" offset="4" desc="(IF)V" key="10" label="irrelevant_unsync_write" filename="Hashtable.java" line="139"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="21" desc="()V" key="11" label="relevant_sync_write" filename="Hashtable.java" line="358"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="51" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="12" label="relevant_sync_write" filename="Hashtable.java" line="409"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="34" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="13" label="relevant_sync_write" filename="Hashtable.java" line="440"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clear" offset="8" desc="()V" key="14" label="relevant_sync_write" filename="Hashtable.java" line="477"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="46" desc="()Ljava/lang/Object;" key="15" label="relevant_sync_write" filename="Hashtable.java" line="501"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="46" desc="(Ljava/lang/Object;)Z" key="16" label="relevant_unsync_write" filename="Hashtable.java" line="652"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="60" desc="()V" key="17" label="relevant_sync_write" filename="Hashtable.java" line="1000"/>
      <class name="benchmarks.instrumented.java.util.Hashtable" key="18" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'modCount' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="18" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="17" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.tsp.TspSolver" name="Done" type="I" key="0" filename="TspSolver.java" line="17"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="4" desc="()I" key="1" label="relevant_sync_read" filename="TspSolver.java" line="369"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="43" desc="([Ljava/lang/String;)V" key="2" label="relevant_unsync_write" filename="Tsp.java" line="51"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="22" desc="()I" key="3" label="relevant_sync_write" filename="TspSolver.java" line="384"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="144" desc="()I" key="4" label="relevant_sync_write" filename="TspSolver.java" line="447"/>
      <field className="benchmarks.tsp.TspSolver" name="TourLock" type="Ljava/lang/Integer;" key="5" label="guard_field" filename="TspSolver.java" line="22"/>
    </locations>
    <info>
      <message value="Accesses to field 'Done' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="5"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" name="_put" type="J" key="0" filename="SynchronizedCache.java" line="332"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incPut" offset="2" desc="()V" key="1" label="irrelevant_unsync_read" filename="SynchronizedCache.java" line="342"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="getTotalPuts" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="SynchronizedCache.java" line="354"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incPut" offset="5" desc="()V" key="3" label="irrelevant_unsync_write" filename="SynchronizedCache.java" line="342"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="reset" offset="8" desc="()V" key="4" label="relevant_sync_write" filename="SynchronizedCache.java" line="362"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" key="5" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_put' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="5" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="contest.manager.Manager" name="released_counter" type="I" key="0" filename="Manager.java" line="8"/>
      <instruction className="contest.manager.Manager" method="main" offset="51" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="Manager.java" line="38"/>
      <instruction className="contest.manager.Manager" method="main" offset="69" desc="([Ljava/lang/String;)V" key="2" label="relevant_unsync_read" filename="Manager.java" line="45"/>
      <method className="contest.manager.Trelease" name="run" desc="()V" key="3" label="async_entrypoint" filename="Trelease.java" line="12"/>
      <instruction className="contest.manager.Trelease" method="ReleaseMemoryBlock" offset="12" desc="()V" key="4" label="relevant_sync_read" filename="Trelease.java" line="58"/>
      <instruction className="contest.manager.Manager" method="&lt;clinit&gt;" offset="3" desc="()V" key="5" label="irrelevant_unsync_write" filename="Manager.java" line="8"/>
      <instruction className="contest.manager.Trelease" method="ReleaseMemoryBlock" offset="15" desc="()V" key="6" label="relevant_sync_write" filename="Trelease.java" line="58"/>
      <field className="contest.manager.Manager" name="rel_counter_lock" type="Ljava/lang/String;" key="7" label="guard_field" filename="Manager.java" line="11"/>
    </locations>
    <info>
      <message value="Field 'released_counter' is accessed from asynchronously invoked method without synchronization."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="7"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="contest.dcl.TicketsOrderSim$Seat" name="ticket" type="Lcontest/dcl/TicketsOrderSim$Ticket;" key="0" filename="TicketsOrderSim.java" line="71"/>
      <instruction className="contest.dcl.TicketsOrderSim" method="check_ticket_details" offset="5" desc="(I)V" key="1" label="relevant_unsync_read" filename="TicketsOrderSim.java" line="26"/>
      <instruction className="contest.dcl.TicketsOrderSim" method="check_ticket_details" offset="25" desc="(I)V" key="2" label="relevant_unsync_read" filename="TicketsOrderSim.java" line="31"/>
      <instruction className="contest.dcl.TicketsOrderSim" method="check_ticket_details" offset="45" desc="(I)V" key="3" label="relevant_unsync_read" filename="TicketsOrderSim.java" line="36"/>
      <instruction className="contest.dcl.TicketsOrderSim" method="check_ticket_details" offset="65" desc="(I)V" key="4" label="relevant_unsync_read" filename="TicketsOrderSim.java" line="41"/>
      <method className="contest.dcl.TicketsOrderSim$TravelAgent" name="run" desc="()V" key="5" label="async_entrypoint" filename="TicketsOrderSim.java" line="83"/>
      <instruction className="contest.dcl.TicketsOrderSim$TravelAgent" method="run" offset="6" desc="()V" key="6" label="relevant_unsync_read" filename="TicketsOrderSim.java" line="85"/>
      <instruction className="contest.dcl.TicketsOrderSim$TravelAgent" method="run" offset="17" desc="()V" key="7" label="relevant_sync_read" filename="TicketsOrderSim.java" line="87"/>
      <instruction className="contest.dcl.TicketsOrderSim$TravelAgent" method="run" offset="27" desc="()V" key="8" label="relevant_sync_write" filename="TicketsOrderSim.java" line="88"/>
    </locations>
    <info>
      <message value="Field 'ticket' is accessed from asynchronously invoked method without synchronization."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="runs" type="I" key="0" filename="FJTaskRunner.java" line="371"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="109" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="1" label="relevant_unsync_read" filename="FJTaskRunner.java" line="700"/>
      <method className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="run" desc="()V" key="2" label="async_entrypoint" filename="FJTaskRunner.java" line="793"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="137" desc="()V" key="3" label="relevant_unsync_read" filename="FJTaskRunner.java" line="779"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="run" offset="11" desc="()V" key="4" label="relevant_unsync_read" filename="FJTaskRunner.java" line="801"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="taskYield" offset="10" desc="()V" key="5" label="relevant_unsync_read" filename="FJTaskRunner.java" line="825"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="taskJoin" offset="11" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="6" label="relevant_unsync_read" filename="FJTaskRunner.java" line="847"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="39" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="7" label="relevant_unsync_read" filename="FJTaskRunner.java" line="877"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="58" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="8" label="relevant_unsync_read" filename="FJTaskRunner.java" line="888"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="60" desc="([Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="9" label="relevant_unsync_read" filename="FJTaskRunner.java" line="935"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="86" desc="([Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="10" label="relevant_unsync_read" filename="FJTaskRunner.java" line="949"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" method="stats" offset="28" desc="()V" key="11" label="relevant_unsync_read" filename="FJTaskRunnerGroup.java" line="383"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="&lt;init&gt;" offset="25" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTaskRunnerGroup;)V" key="12" label="irrelevant_unsync_write" filename="FJTaskRunner.java" line="371"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="112" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="13" label="relevant_unsync_write" filename="FJTaskRunner.java" line="700"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="140" desc="()V" key="14" label="relevant_unsync_write" filename="FJTaskRunner.java" line="779"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="run" offset="14" desc="()V" key="15" label="relevant_unsync_write" filename="FJTaskRunner.java" line="801"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="taskYield" offset="13" desc="()V" key="16" label="relevant_unsync_write" filename="FJTaskRunner.java" line="825"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="taskJoin" offset="14" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="17" label="relevant_unsync_write" filename="FJTaskRunner.java" line="847"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="42" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="18" label="relevant_unsync_write" filename="FJTaskRunner.java" line="877"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="61" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="19" label="relevant_unsync_write" filename="FJTaskRunner.java" line="888"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="63" desc="([Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="20" label="relevant_unsync_write" filename="FJTaskRunner.java" line="935"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="coInvoke" offset="89" desc="([Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="21" label="relevant_unsync_write" filename="FJTaskRunner.java" line="949"/>
    </locations>
    <info>
      <message value="Field 'runs' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="13" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="14" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="15" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="16" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="17" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="18" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="19" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="20" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="21" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="scans" type="I" key="0" filename="FJTaskRunner.java" line="374"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="41" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="1" label="relevant_unsync_read" filename="FJTaskRunner.java" line="670"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="80" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="2" label="relevant_unsync_read" filename="FJTaskRunner.java" line="692"/>
      <method className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" name="run" desc="()V" key="3" label="async_entrypoint" filename="FJTaskRunner.java" line="793"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="37" desc="()V" key="4" label="relevant_unsync_read" filename="FJTaskRunner.java" line="734"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="76" desc="()V" key="5" label="relevant_unsync_read" filename="FJTaskRunner.java" line="750"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup" method="stats" offset="36" desc="()V" key="6" label="relevant_unsync_read" filename="FJTaskRunnerGroup.java" line="386"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="&lt;init&gt;" offset="28" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTaskRunnerGroup;)V" key="7" label="irrelevant_unsync_write" filename="FJTaskRunner.java" line="374"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="44" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="8" label="relevant_unsync_write" filename="FJTaskRunner.java" line="670"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scan" offset="83" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/FJTask;)V" key="9" label="relevant_unsync_write" filename="FJTaskRunner.java" line="692"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="40" desc="()V" key="10" label="relevant_unsync_write" filename="FJTaskRunner.java" line="734"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner" method="scanWhileIdling" offset="79" desc="()V" key="11" label="relevant_unsync_write" filename="FJTaskRunner.java" line="750"/>
    </locations>
    <info>
      <message value="Field 'scans' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="benchmarks.stringbuffer.StringBufferTest" name="falcon_exception" type="Z" key="0" filename="StringBufferTest.java" line="11"/>
      <instruction className="benchmarks.stringbuffer.StringBufferTest" method="main" offset="67" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="StringBufferTest.java" line="68"/>
      <instruction className="benchmarks.stringbuffer.StringBufferTest" method="&lt;clinit&gt;" offset="1" desc="()V" key="2" label="irrelevant_unsync_write" filename="StringBufferTest.java" line="11"/>
      <method className="benchmarks.stringbuffer.StringBufferTest" name="run" desc="()V" key="3" label="async_entrypoint" filename="StringBufferTest.java" line="21"/>
      <instruction className="benchmarks.stringbuffer.StringBufferTest" method="run" offset="30" desc="()V" key="4" label="relevant_unsync_write" filename="StringBufferTest.java" line="36"/>
      <instruction className="benchmarks.stringbuffer.StringBufferTest" method="main" offset="1" desc="([Ljava/lang/String;)V" key="5" label="relevant_unsync_write" filename="StringBufferTest.java" line="41"/>
    </locations>
    <info>
      <message value="Field 'falcon_exception' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Hashtable" name="modCount" type="I" key="0" filename="Hashtable.java" line="141"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="18" desc="()V" key="1" label="relevant_sync_read" filename="Hashtable.java" line="360"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="48" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="Hashtable.java" line="411"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="31" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="442"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clear" offset="5" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="479"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="43" desc="(Ljava/lang/Object;)Z" key="5" label="relevant_unsync_read" filename="Hashtable.java" line="658"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="&lt;init&gt;" offset="22" desc="(Lbenchmarks/instrumented/java15/util/Hashtable;IZ)V" key="6" label="relevant_unsync_read" filename="Hashtable.java" line="975"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="next" offset="2" desc="()Ljava/lang/Object;" key="7" label="relevant_unsync_read" filename="Hashtable.java" line="1019"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="17" desc="()V" key="8" label="relevant_unsync_read" filename="Hashtable.java" line="1029"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="57" desc="()V" key="9" label="relevant_sync_read" filename="Hashtable.java" line="1039"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="&lt;init&gt;" offset="4" desc="(IF)V" key="10" label="irrelevant_unsync_write" filename="Hashtable.java" line="141"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="21" desc="()V" key="11" label="relevant_sync_write" filename="Hashtable.java" line="360"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="51" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="12" label="relevant_sync_write" filename="Hashtable.java" line="411"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="34" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="13" label="relevant_sync_write" filename="Hashtable.java" line="442"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clear" offset="8" desc="()V" key="14" label="relevant_sync_write" filename="Hashtable.java" line="479"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="46" desc="()Ljava/lang/Object;" key="15" label="relevant_sync_write" filename="Hashtable.java" line="503"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="46" desc="(Ljava/lang/Object;)Z" key="16" label="relevant_unsync_write" filename="Hashtable.java" line="658"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="60" desc="()V" key="17" label="relevant_sync_write" filename="Hashtable.java" line="1039"/>
      <class name="benchmarks.instrumented.java15.util.Hashtable" key="18" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'modCount' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="18" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="17" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" name="elementData" type="[Ljava/lang/Object;" key="0" filename="Vector.java" line="7"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="copyInto" offset="7" desc="([Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="Vector.java" line="66"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="trimToSize" offset="1" desc="()V" key="2" label="relevant_sync_read" filename="Vector.java" line="78"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="trimToSize" offset="9" desc="()V" key="3" label="relevant_sync_read" filename="Vector.java" line="80"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="trimToSize" offset="20" desc="()V" key="4" label="relevant_sync_read" filename="Vector.java" line="82"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="ensureCapacity" offset="1" desc="(I)V" key="5" label="relevant_sync_read" filename="Vector.java" line="95"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="ensureCapacity" offset="8" desc="(I)V" key="6" label="relevant_sync_read" filename="Vector.java" line="97"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="ensureCapacity" offset="35" desc="(I)V" key="7" label="relevant_sync_read" filename="Vector.java" line="104"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="setSize" offset="12" desc="(I)V" key="8" label="relevant_sync_read" filename="Vector.java" line="122"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="capacity" offset="1" desc="()I" key="9" label="relevant_unsync_read" filename="Vector.java" line="135"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="indexOf" offset="5" desc="(Ljava/lang/Object;I)I" key="10" label="relevant_sync_read" filename="Vector.java" line="201"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="lastIndexOf" offset="5" desc="(Ljava/lang/Object;I)I" key="11" label="relevant_sync_read" filename="Vector.java" line="234"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="elementAt" offset="20" desc="(I)Ljava/lang/Object;" key="12" label="relevant_sync_read" filename="Vector.java" line="260"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="firstElement" offset="8" desc="()Ljava/lang/Object;" key="13" label="relevant_sync_read" filename="Vector.java" line="277"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="lastElement" offset="8" desc="()Ljava/lang/Object;" key="14" label="relevant_sync_read" filename="Vector.java" line="292"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="setElementAt" offset="20" desc="(Ljava/lang/Object;I)V" key="15" label="relevant_sync_read" filename="Vector.java" line="314"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="37" desc="(I)V" key="16" label="relevant_sync_read" filename="Vector.java" line="341"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeElementAt" offset="53" desc="(I)V" key="17" label="relevant_sync_read" filename="Vector.java" line="344"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="29" desc="(Ljava/lang/Object;I)V" key="18" label="relevant_sync_read" filename="Vector.java" line="369"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="insertElementAt" offset="42" desc="(Ljava/lang/Object;I)V" key="19" label="relevant_sync_read" filename="Vector.java" line="370"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="addElement" offset="7" desc="(Ljava/lang/Object;)V" key="20" label="relevant_sync_read" filename="Vector.java" line="385"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="removeAllElements" offset="4" desc="()V" key="21" label="relevant_sync_read" filename="Vector.java" line="415"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="clone" offset="11" desc="()Ljava/lang/Object;" key="22" label="relevant_sync_read" filename="Vector.java" line="430"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="&lt;init&gt;" offset="5" desc="(II)V" key="23" label="irrelevant_unsync_write" filename="Vector.java" line="33"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="trimToSize" offset="15" desc="()V" key="24" label="relevant_sync_write" filename="Vector.java" line="81"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="ensureCapacity" offset="30" desc="(I)V" key="25" label="relevant_sync_write" filename="Vector.java" line="103"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" method="clone" offset="8" desc="()Ljava/lang/Object;" key="26" label="relevant_sync_write" filename="Vector.java" line="429"/>
      <class name="benchmarks.jpf_test_cases.replicatedcasestudies.Vector" key="27" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'elementData' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="27" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="22" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="23" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="24" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="25" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="26" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.tsp.TourElement" name="conn" type="I" key="0" filename="TourElement.java" line="13"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="49" desc="(II)I" key="1" label="relevant_sync_read" filename="TspSolver.java" line="82"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="86" desc="(II)I" key="2" label="relevant_sync_read" filename="TspSolver.java" line="92"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="18" desc="(I)I" key="3" label="relevant_sync_read" filename="TspSolver.java" line="163"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="101" desc="(I)I" key="4" label="relevant_sync_read" filename="TspSolver.java" line="200"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="124" desc="(I)I" key="5" label="relevant_sync_read" filename="TspSolver.java" line="206"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="30" desc="(I)V" key="6" label="relevant_sync_read" filename="TspSolver.java" line="303"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="77" desc="([Ljava/lang/String;)V" key="7" label="relevant_unsync_write" filename="Tsp.java" line="62"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="50" desc="(II)I" key="8" label="relevant_sync_write" filename="TspSolver.java" line="82"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="91" desc="(II)I" key="9" label="relevant_sync_write" filename="TspSolver.java" line="92"/>
    </locations>
    <info>
      <message value="Accesses to field 'conn' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" name="stop" type="Z" key="0" filename="ReplicatedWorkers.java" line="53"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.Worker" method="run" offset="8" desc="()V" key="1" label="relevant_unsync_read" filename="ReplicatedWorkers.java" line="265"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" method="&lt;init&gt;" offset="10" desc="(Lbenchmarks/jpf_test_cases/replicatedcasestudies/Configuration;Lbenchmarks/jpf_test_cases/replicatedcasestudies/Collection;Lbenchmarks/jpf_test_cases/replicatedcasestudies/Collection;II)V" key="2" label="irrelevant_unsync_write" filename="ReplicatedWorkers.java" line="76"/>
      <instruction className="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" method="destroy" offset="2" desc="()V" key="3" label="relevant_sync_write" filename="ReplicatedWorkers.java" line="100"/>
      <class name="benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers" key="4" label="guard_type" filename="ReplicatedWorkers.java"/>
    </locations>
    <info>
      <message value="Accesses to field 'stop' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="4" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="contest.bufwriter.Buffer" name="_count" type="I" key="0" filename="Buffer.java" line="18"/>
      <instruction className="contest.bufwriter.BufWriter" method="main" offset="157" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="BufWriter.java" line="88"/>
      <instruction className="contest.bufwriter.SyncWriter" method="run" offset="27" desc="()V" key="2" label="relevant_sync_read" filename="SyncWriter.java" line="31"/>
      <instruction className="contest.bufwriter.Writer" method="run" offset="19" desc="()V" key="3" label="relevant_sync_read" filename="Writer.java" line="31"/>
      <instruction className="contest.bufwriter.Buffer" method="&lt;init&gt;" offset="14" desc="(I)V" key="4" label="irrelevant_unsync_write" filename="Buffer.java" line="24"/>
      <instruction className="contest.bufwriter.SyncWriter" method="run" offset="30" desc="()V" key="5" label="relevant_sync_write" filename="SyncWriter.java" line="31"/>
      <instruction className="contest.bufwriter.Writer" method="run" offset="22" desc="()V" key="6" label="relevant_sync_write" filename="Writer.java" line="31"/>
      <class name="contest.bufwriter.Buffer" key="7" label="guard_type" filename="Buffer.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_count' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="7" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="contest.bufwriter.Buffer" name="_pos" type="I" key="0" filename="Buffer.java" line="16"/>
      <instruction className="contest.bufwriter.BufWriter" method="main" offset="161" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="BufWriter.java" line="88"/>
      <method className="contest.bufwriter.Checker" name="run" desc="()V" key="2" label="async_entrypoint" filename="Checker.java" line="21"/>
      <instruction className="contest.bufwriter.Checker" method="run" offset="10" desc="()V" key="3" label="relevant_sync_read" filename="Checker.java" line="27"/>
      <instruction className="contest.bufwriter.SyncWriter" method="run" offset="5" desc="()V" key="4" label="relevant_sync_read" filename="SyncWriter.java" line="28"/>
      <instruction className="contest.bufwriter.SyncWriter" method="run" offset="15" desc="()V" key="5" label="relevant_sync_read" filename="SyncWriter.java" line="29"/>
      <instruction className="contest.bufwriter.SyncWriter" method="run" offset="21" desc="()V" key="6" label="relevant_sync_read" filename="SyncWriter.java" line="30"/>
      <instruction className="contest.bufwriter.Writer" method="run" offset="1" desc="()V" key="7" label="relevant_unsync_read" filename="Writer.java" line="27"/>
      <instruction className="contest.bufwriter.Writer" method="run" offset="9" desc="()V" key="8" label="relevant_unsync_read" filename="Writer.java" line="28"/>
      <instruction className="contest.bufwriter.Buffer" method="&lt;init&gt;" offset="4" desc="(I)V" key="9" label="irrelevant_unsync_write" filename="Buffer.java" line="21"/>
      <instruction className="contest.bufwriter.Checker" method="run" offset="16" desc="()V" key="10" label="relevant_sync_write" filename="Checker.java" line="28"/>
      <instruction className="contest.bufwriter.SyncWriter" method="run" offset="24" desc="()V" key="11" label="relevant_sync_write" filename="SyncWriter.java" line="30"/>
      <class name="contest.bufwriter.Buffer" key="12" label="guard_type" filename="Buffer.java"/>
    </locations>
    <info>
      <message value="Field '_pos' is accessed from asynchronously invoked method without synchronization."/>
      <guards>
        <guardRelative typeRef="12" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" name="_remove" type="J" key="0" filename="SynchronizedCache.java" line="333"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incRemove" offset="2" desc="()V" key="1" label="irrelevant_unsync_read" filename="SynchronizedCache.java" line="345"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="getTotalRemoves" offset="1" desc="()J" key="2" label="relevant_unsync_read" filename="SynchronizedCache.java" line="357"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="incRemove" offset="5" desc="()V" key="3" label="irrelevant_unsync_write" filename="SynchronizedCache.java" line="345"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" method="reset" offset="11" desc="()V" key="4" label="relevant_sync_write" filename="SynchronizedCache.java" line="363"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl" key="5" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to field '_remove' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="5" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_CALLBACK_ACCESS">
    <locations>
      <field className="contest.manager.Manager" name="flag" type="Z" key="0" filename="Manager.java" line="9"/>
      <instruction className="contest.manager.Manager" method="main" offset="80" desc="([Ljava/lang/String;)V" key="1" label="relevant_unsync_read" filename="Manager.java" line="46"/>
      <method className="contest.manager.TmemoryHandler" name="run" desc="()V" key="2" label="async_entrypoint" filename="TmemoryHandler.java" line="8"/>
      <instruction className="contest.manager.TmemoryHandler" method="run" offset="14" desc="()V" key="3" label="relevant_unsync_read" filename="TmemoryHandler.java" line="13"/>
      <method className="contest.manager.Trelease" name="run" desc="()V" key="4" label="async_entrypoint" filename="Trelease.java" line="12"/>
      <instruction className="contest.manager.Trelease" method="run" offset="2" desc="()V" key="5" label="relevant_unsync_read" filename="Trelease.java" line="17"/>
      <instruction className="contest.manager.Trelease" method="run" offset="25" desc="()V" key="6" label="relevant_unsync_read" filename="Trelease.java" line="32"/>
      <instruction className="contest.manager.Manager" method="&lt;clinit&gt;" offset="5" desc="()V" key="7" label="irrelevant_unsync_write" filename="Manager.java" line="9"/>
      <instruction className="contest.manager.Manager" method="main" offset="74" desc="([Ljava/lang/String;)V" key="8" label="relevant_unsync_write" filename="Manager.java" line="45"/>
      <instruction className="contest.manager.TmemoryHandler" method="run" offset="21" desc="()V" key="9" label="relevant_unsync_write" filename="TmemoryHandler.java" line="20"/>
      <instruction className="contest.manager.Trelease" method="ReleaseMemoryBlock" offset="5" desc="()V" key="10" label="relevant_unsync_write" filename="Trelease.java" line="51"/>
    </locations>
    <info>
      <message value="Field 'flag' is accessed from asynchronously invoked method without synchronization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="7" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="8" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="contest.bubblesort2.NewThread" name="array" type="[I" key="0" filename="NewThread.java" line="9"/>
      <method className="contest.bubblesort2.NewThread" name="run" desc="()V" key="1" label="async_entrypoint" filename="NewThread.java" line="38"/>
      <instruction className="contest.bubblesort2.NewThread" method="swpArray" offset="4" desc="(I)V" key="2" label="relevant_sync_read" filename="NewThread.java" line="32"/>
      <instruction className="contest.bubblesort2.NewThread" method="swpArray" offset="12" desc="(I)V" key="3" label="relevant_sync_read" filename="NewThread.java" line="33"/>
      <instruction className="contest.bubblesort2.NewThread" method="run" offset="5" desc="()V" key="4" label="relevant_unsync_read" filename="NewThread.java" line="42"/>
      <instruction className="contest.bubblesort2.NewThread" method="swpArray" offset="13" desc="(I)V" key="5" label="relevant_sync_write" filename="NewThread.java" line="33"/>
      <instruction className="contest.bubblesort2.NewThread" method="swpArray" offset="17" desc="(I)V" key="6" label="relevant_sync_write" filename="NewThread.java" line="34"/>
      <class name="contest.bubblesort2.NewThread" key="7" label="guard" filename="NewThread.java"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'array' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="7"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Hashtable" name="table" type="[Lbenchmarks/instrumented/java15/util/Hashtable$Entry;" key="0" filename="Hashtable.java" line="112"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="contains" offset="15" desc="(Ljava/lang/Object;)Z" key="1" label="relevant_sync_read" filename="Hashtable.java" line="276"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="containsKey" offset="15" desc="(Ljava/lang/Object;)Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="316"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="get" offset="15" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="338"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="rehash" offset="38" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="365"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="21" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="Hashtable.java" line="403"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="71" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="421"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="15" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="Hashtable.java" line="440"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="21" desc="()Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="Hashtable.java" line="497"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="26" desc="()Ljava/lang/Object;" key="9" label="relevant_sync_read" filename="Hashtable.java" line="498"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="contains" offset="27" desc="(Ljava/lang/Object;)Z" key="10" label="relevant_unsync_read" filename="Hashtable.java" line="640"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="27" desc="(Ljava/lang/Object;)Z" key="11" label="relevant_unsync_read" filename="Hashtable.java" line="655"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="hashCode" offset="25" desc="()I" key="12" label="relevant_sync_read" filename="Hashtable.java" line="782"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="45" desc="()V" key="13" label="relevant_sync_read" filename="Hashtable.java" line="1036"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="put" offset="82" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="14" label="relevant_sync_write" filename="Hashtable.java" line="422"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="remove" offset="46" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="15" label="relevant_sync_write" filename="Hashtable.java" line="446"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clear" offset="16" desc="()V" key="16" label="relevant_sync_write" filename="Hashtable.java" line="481"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable" method="clone" offset="31" desc="()Ljava/lang/Object;" key="17" label="relevant_sync_write" filename="Hashtable.java" line="497"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$EntrySet" method="remove" offset="58" desc="(Ljava/lang/Object;)Z" key="18" label="relevant_unsync_write" filename="Hashtable.java" line="662"/>
      <instruction className="benchmarks.instrumented.java15.util.Hashtable$Enumerator" method="remove" offset="73" desc="()V" key="19" label="relevant_sync_write" filename="Hashtable.java" line="1042"/>
      <class name="benchmarks.instrumented.java15.util.Hashtable" key="20" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'table' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="20" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="19" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_MIXED_COL">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedBuffer" name="array_" type="[Ljava/lang/Object;" key="0" filename="BoundedBuffer.java" line="27"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedBuffer" method="extract" offset="10" desc="()Ljava/lang/Object;" key="1" label="relevant_sync_read" filename="BoundedBuffer.java" line="87"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedBuffer" method="peek" offset="11" desc="()Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="BoundedBuffer.java" line="96"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedBuffer" method="insert" offset="11" desc="(Ljava/lang/Object;)V" key="3" label="relevant_sync_write" filename="BoundedBuffer.java" line="81"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedBuffer" method="extract" offset="17" desc="()Ljava/lang/Object;" key="4" label="relevant_sync_write" filename="BoundedBuffer.java" line="88"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedBuffer" key="5" label="guard_type" filename="BoundedBuffer.java"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedBuffer" name="putMonitor_" type="Ljava/lang/Object;" key="6" label="guard_field" filename="BoundedBuffer.java" line="38"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'array_' are synchronized using different locks."/>
      <guards>
        <guardRelative typeRef="5" key="1" intrinsic="true">
          <guardPath>
            <locationRef key="6"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
        <guardRelative typeRef="5" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="1" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="benchmarks.tsp.TourElement" name="prefix" type="[I" key="0" filename="TourElement.java" line="12"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="45" desc="(II)I" key="1" label="relevant_sync_read" filename="TspSolver.java" line="81"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="67" desc="(II)I" key="2" label="relevant_sync_read" filename="TspSolver.java" line="86"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="45" desc="(I)I" key="3" label="relevant_sync_read" filename="TspSolver.java" line="169"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="55" desc="(I)I" key="4" label="relevant_sync_read" filename="TspSolver.java" line="170"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="134" desc="(I)I" key="5" label="relevant_sync_read" filename="TspSolver.java" line="206"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="141" desc="(I)I" key="6" label="relevant_sync_read" filename="TspSolver.java" line="207"/>
      <instruction className="benchmarks.tsp.TspSolver" method="split_tour" offset="18" desc="(I)V" key="7" label="relevant_sync_read" filename="TspSolver.java" line="295"/>
      <instruction className="benchmarks.tsp.TspSolver" method="recursive_solve" offset="35" desc="(I)V" key="8" label="relevant_unsync_read" filename="TspSolver.java" line="487"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="72" desc="([Ljava/lang/String;)V" key="9" label="relevant_unsync_write" filename="Tsp.java" line="61"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="46" desc="(II)I" key="10" label="relevant_sync_write" filename="TspSolver.java" line="81"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="83" desc="(II)I" key="11" label="relevant_sync_write" filename="TspSolver.java" line="87"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="30" desc="(I)I" key="12" label="relevant_sync_write" filename="TspSolver.java" line="165"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="35" desc="(I)I" key="13" label="relevant_sync_write" filename="TspSolver.java" line="166"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'prefix' are inconsistently synchronized."/>
      <guards>
        <guardUnknown key="0" intrinsic="true"/>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="9" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="10" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="benchmarks.instrumented.java.util.Hashtable" name="table" type="[Lbenchmarks/instrumented/java/util/Hashtable$Entry;" key="0" filename="Hashtable.java" line="110"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="contains" offset="15" desc="(Ljava/lang/Object;)Z" key="1" label="relevant_sync_read" filename="Hashtable.java" line="274"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="containsKey" offset="15" desc="(Ljava/lang/Object;)Z" key="2" label="relevant_sync_read" filename="Hashtable.java" line="314"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="get" offset="15" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_read" filename="Hashtable.java" line="336"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="rehash" offset="38" desc="()V" key="4" label="relevant_sync_read" filename="Hashtable.java" line="363"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="21" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="5" label="relevant_sync_read" filename="Hashtable.java" line="401"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="76" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Hashtable.java" line="419"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="15" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="Hashtable.java" line="438"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="21" desc="()Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="Hashtable.java" line="495"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="26" desc="()Ljava/lang/Object;" key="9" label="relevant_sync_read" filename="Hashtable.java" line="496"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="contains" offset="27" desc="(Ljava/lang/Object;)Z" key="10" label="relevant_unsync_read" filename="Hashtable.java" line="634"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="27" desc="(Ljava/lang/Object;)Z" key="11" label="relevant_unsync_read" filename="Hashtable.java" line="649"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="hashCode" offset="25" desc="()I" key="12" label="relevant_sync_read" filename="Hashtable.java" line="776"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="45" desc="()V" key="13" label="relevant_sync_read" filename="Hashtable.java" line="997"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="put" offset="82" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" key="14" label="relevant_sync_write" filename="Hashtable.java" line="420"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="remove" offset="46" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="15" label="relevant_sync_write" filename="Hashtable.java" line="444"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clear" offset="16" desc="()V" key="16" label="relevant_sync_write" filename="Hashtable.java" line="479"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable" method="clone" offset="31" desc="()Ljava/lang/Object;" key="17" label="relevant_sync_write" filename="Hashtable.java" line="495"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$EntrySet" method="remove" offset="58" desc="(Ljava/lang/Object;)Z" key="18" label="relevant_unsync_write" filename="Hashtable.java" line="656"/>
      <instruction className="benchmarks.instrumented.java.util.Hashtable$Enumerator" method="remove" offset="73" desc="()V" key="19" label="relevant_sync_write" filename="Hashtable.java" line="1003"/>
      <class name="benchmarks.instrumented.java.util.Hashtable" key="20" label="guard_type" filename="Hashtable.java"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'table' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="20" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="11" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="12" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="19" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="benchmarks.tsp.TspSolver" name="TourStack" type="[I" key="0" filename="TspSolver.java" line="25"/>
      <instruction className="benchmarks.tsp.TspSolver" method="new_tour" offset="14" desc="(II)I" key="1" label="relevant_sync_read" filename="TspSolver.java" line="71"/>
      <instruction className="benchmarks.tsp.Tsp" method="main" offset="116" desc="([Ljava/lang/String;)V" key="2" label="relevant_unsync_write" filename="Tsp.java" line="74"/>
      <instruction className="benchmarks.tsp.TspSolver" method="calc_bound" offset="79" desc="(I)I" key="3" label="relevant_sync_write" filename="TspSolver.java" line="180"/>
      <instruction className="benchmarks.tsp.TspSolver" method="find_solvable_tour" offset="140" desc="()I" key="4" label="relevant_sync_write" filename="TspSolver.java" line="443"/>
      <instruction className="benchmarks.tsp.TspSolver" method="get_tour" offset="14" desc="(I)I" key="5" label="relevant_sync_write" filename="TspSolver.java" line="458"/>
      <field className="benchmarks.tsp.TspSolver" name="TourLock" type="Ljava/lang/Integer;" key="6" label="guard_field" filename="TspSolver.java" line="22"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'TourStack' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="6"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="benchmarks.instrumented.java.util.Vector" name="elementData" type="[Ljava/lang/Object;" key="0" filename="Vector.java" line="75"/>
      <instruction className="benchmarks.instrumented.java.util.Vector$1" method="nextElement" offset="21" desc="()Ljava/lang/Object;" key="1" label="relevant_sync_read" filename="Vector.java" line="306"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="indexOf" offset="8" desc="(Ljava/lang/Object;I)I" key="2" label="relevant_sync_read" filename="Vector.java" line="361"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="indexOf" offset="25" desc="(Ljava/lang/Object;I)I" key="3" label="relevant_sync_read" filename="Vector.java" line="365"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastIndexOf" offset="27" desc="(Ljava/lang/Object;I)I" key="4" label="relevant_sync_read" filename="Vector.java" line="406"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastIndexOf" offset="42" desc="(Ljava/lang/Object;I)I" key="5" label="relevant_sync_read" filename="Vector.java" line="410"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="elementAt" offset="22" desc="(I)Ljava/lang/Object;" key="6" label="relevant_sync_read" filename="Vector.java" line="436"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="firstElement" offset="10" desc="()Ljava/lang/Object;" key="7" label="relevant_sync_read" filename="Vector.java" line="450"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="lastElement" offset="13" desc="()Ljava/lang/Object;" key="8" label="relevant_sync_read" filename="Vector.java" line="464"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="get" offset="12" desc="(I)Ljava/lang/Object;" key="9" label="relevant_sync_read" filename="Vector.java" line="713"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="set" offset="12" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="10" label="relevant_sync_read" filename="Vector.java" line="731"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="18" desc="(I)Ljava/lang/Object;" key="11" label="relevant_sync_read" filename="Vector.java" line="795"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setSize" offset="21" desc="(I)V" key="12" label="relevant_sync_write" filename="Vector.java" line="248"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="setElementAt" offset="23" desc="(Ljava/lang/Object;I)V" key="13" label="relevant_sync_write" filename="Vector.java" line="493"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeElementAt" offset="62" desc="(I)V" key="14" label="relevant_sync_write" filename="Vector.java" line="530"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="insertElementAt" offset="48" desc="(Ljava/lang/Object;I)V" key="15" label="relevant_sync_write" filename="Vector.java" line="564"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="addElement" offset="22" desc="(Ljava/lang/Object;)V" key="16" label="relevant_sync_write" filename="Vector.java" line="583"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeAllElements" offset="13" desc="()V" key="17" label="relevant_sync_write" filename="Vector.java" line="625"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="set" offset="18" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="18" label="relevant_sync_write" filename="Vector.java" line="732"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="add" offset="22" desc="(Ljava/lang/Object;)Z" key="19" label="relevant_sync_write" filename="Vector.java" line="746"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="remove" offset="49" desc="(I)Ljava/lang/Object;" key="20" label="relevant_sync_write" filename="Vector.java" line="801"/>
      <instruction className="benchmarks.instrumented.java.util.Vector" method="removeRange" offset="37" desc="(II)V" key="21" label="relevant_unsync_write" filename="Vector.java" line="1008"/>
      <class name="benchmarks.instrumented.java.util.Vector" key="22" label="guard_type" filename="Vector.java"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'elementData' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="22" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="13" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="14" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="15" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="16" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="17" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="18" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="19" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="20" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="21" type="relevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="contest.bubblesort.OneBubble" name="arr" type="[I" key="0" filename="OneBubble.java" line="19"/>
      <method className="contest.bubblesort.OneBubble" name="run" desc="()V" key="1" label="async_entrypoint" filename="OneBubble.java" line="39"/>
      <instruction className="contest.bubblesort.OneBubble" method="run" offset="15" desc="()V" key="2" label="relevant_unsync_read" filename="OneBubble.java" line="53"/>
      <instruction className="contest.bubblesort.OneBubble" method="SwapConsecutives" offset="7" desc="(I)V" key="3" label="relevant_sync_read" filename="OneBubble.java" line="64"/>
      <instruction className="contest.bubblesort.OneBubble" method="SwapConsecutives" offset="17" desc="(I)V" key="4" label="relevant_sync_read" filename="OneBubble.java" line="65"/>
      <instruction className="contest.bubblesort.OneBubble" method="SwapConsecutives" offset="18" desc="(I)V" key="5" label="relevant_sync_write" filename="OneBubble.java" line="65"/>
      <instruction className="contest.bubblesort.OneBubble" method="SwapConsecutives" offset="25" desc="(I)V" key="6" label="relevant_sync_write" filename="OneBubble.java" line="66"/>
      <field className="contest.bubblesort.OneBubble" name="_threadCounterLock" type="Ljava/lang/Object;" key="7" label="guard_field" filename="OneBubble.java" line="21"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'arr' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="7"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="contest.bubblesort.BubbleSort" name="ob" type="[Lcontest/bubblesort/OneBubble;" key="0" filename="BubbleSort.java" line="29"/>
      <instruction className="contest.bubblesort.BubbleSort" method="Sort" offset="26" desc="()V" key="1" label="relevant_sync_read" filename="BubbleSort.java" line="81"/>
      <instruction className="contest.bubblesort.BubbleSort" method="Join" offset="6" desc="()V" key="2" label="relevant_unsync_read" filename="BubbleSort.java" line="91"/>
      <instruction className="contest.bubblesort.BubbleSort" method="Sort" offset="22" desc="()V" key="3" label="relevant_sync_write" filename="BubbleSort.java" line="80"/>
      <field className="contest.bubblesort.BubbleSort" name="sort_lock" type="Ljava/lang/Object;" key="4" label="guard_field" filename="BubbleSort.java" line="23"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'ob' are inconsistently synchronized."/>
      <guards>
        <guardAbsolute key="0" intrinsic="true">
          <guardPath>
            <locationRef key="4"/>
          </guardPath>
        </guardAbsolute>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" name="l" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;" key="0" filename="CopyOnWriteArrayList.java" line="1044"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="get" offset="16" desc="(I)Ljava/lang/Object;" key="1" label="relevant_sync_read" filename="CopyOnWriteArrayList.java" line="1085"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList$COWSubListIterator" method="&lt;init&gt;" offset="15" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList$COWSubList;I)V" key="2" label="relevant_unsync_read" filename="CopyOnWriteArrayList.java" line="1139"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="set" offset="17" desc="(ILjava/lang/Object;)Ljava/lang/Object;" key="3" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="1075"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="add" offset="24" desc="(ILjava/lang/Object;)V" key="4" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="1101"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" method="remove" offset="16" desc="(I)Ljava/lang/Object;" key="5" label="relevant_sync_write" filename="CopyOnWriteArrayList.java" line="1111"/>
      <field className="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" name="l" type="Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/CopyOnWriteArrayList;" key="6" label="guard_field" filename="CopyOnWriteArrayList.java" line="1044"/>
      <class name="benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWSubList" key="7" label="guard_type" filename="CopyOnWriteArrayList.java"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field 'l' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="7" key="0" intrinsic="true">
          <guardPath>
            <locationRef key="6"/>
          </guardPath>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="4" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="net.sf.cache4j.impl.SynchronizedCache" name="_map" type="Ljava/util/Map;" key="0" filename="SynchronizedCache.java" line="66"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="put" offset="34" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="SynchronizedCache.java" line="116"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="get" offset="10" desc="(Ljava/lang/Object;)Ljava/lang/Object;" key="2" label="relevant_sync_read" filename="SynchronizedCache.java" line="147"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="size" offset="2" desc="()I" key="3" label="relevant_unsync_read" filename="SynchronizedCache.java" line="194"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="clean" offset="21" desc="()V" key="4" label="relevant_sync_read" filename="SynchronizedCache.java" line="257"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="checkOverflow" offset="32" desc="(I)V" key="5" label="relevant_sync_read" filename="SynchronizedCache.java" line="282"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="remove" offset="10" desc="(Ljava/lang/Object;)V" key="6" label="relevant_sync_write" filename="SynchronizedCache.java" line="180"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="clear" offset="2" desc="()V" key="7" label="relevant_sync_write" filename="SynchronizedCache.java" line="202"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="checkOverflow" offset="21" desc="(I)V" key="8" label="relevant_sync_write" filename="SynchronizedCache.java" line="291"/>
      <instruction className="net.sf.cache4j.impl.SynchronizedCache" method="newCacheObject" offset="9" desc="(Ljava/lang/Object;)Lnet/sf/cache4j/impl/CacheObject;" key="9" label="relevant_sync_write" filename="SynchronizedCache.java" line="304"/>
      <class name="net.sf.cache4j.impl.SynchronizedCache" key="10" label="guard_type" filename="SynchronizedCache.java"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field '_map' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="10" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_SL_INCONSISTENT_COL">
    <locations>
      <field className="net.sf.cache4j.impl.BlockingCache" name="_map" type="Ljava/util/Map;" key="0" filename="BlockingCache.java" line="84"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="remove" offset="41" desc="(Ljava/lang/Object;)V" key="1" label="relevant_sync_read" filename="BlockingCache.java" line="284"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="remove" offset="69" desc="(Ljava/lang/Object;)V" key="2" label="relevant_sync_read" filename="BlockingCache.java" line="299"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="size" offset="2" desc="()I" key="3" label="relevant_unsync_read" filename="BlockingCache.java" line="314"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="clear" offset="8" desc="()V" key="4" label="relevant_sync_read" filename="BlockingCache.java" line="325"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="clean" offset="21" desc="()V" key="5" label="relevant_sync_read" filename="BlockingCache.java" line="386"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="checkOverflow" offset="54" desc="(I)V" key="6" label="relevant_sync_read" filename="BlockingCache.java" line="413"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="checkOverflow" offset="31" desc="(I)V" key="7" label="relevant_sync_read" filename="BlockingCache.java" line="425"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="tmapPut" offset="8" desc="(Lnet/sf/cache4j/impl/CacheObject;)V" key="8" label="relevant_sync_read" filename="BlockingCache.java" line="450"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="getCacheObject" offset="7" desc="(Ljava/lang/Object;)Lnet/sf/cache4j/impl/CacheObject;" key="9" label="relevant_sync_read" filename="BlockingCache.java" line="465"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="remove" offset="81" desc="(Ljava/lang/Object;)V" key="10" label="relevant_sync_write" filename="BlockingCache.java" line="301"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="checkOverflow" offset="43" desc="(I)V" key="11" label="relevant_sync_write" filename="BlockingCache.java" line="427"/>
      <instruction className="net.sf.cache4j.impl.BlockingCache" method="getCacheObject" offset="21" desc="(Ljava/lang/Object;)Lnet/sf/cache4j/impl/CacheObject;" key="12" label="relevant_sync_write" filename="BlockingCache.java" line="468"/>
      <class name="net.sf.cache4j.impl.BlockingCache" key="13" label="guard_type" filename="BlockingCache.java"/>
    </locations>
    <info>
      <message value="Accesses to the collection in field '_map' are inconsistently synchronized."/>
      <guards>
        <guardRelative typeRef="13" key="0" intrinsic="true">
          <guardPath/>
          <targetPath/>
        </guardRelative>
      </guards>
      <accesses>
        <access location="1" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="2" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="5" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="6" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="7" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="8" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="9" type="relevant_sync_read">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="10" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="11" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
        <access location="12" type="relevant_sync_write">
          <accessGuards>
            <guardRef key="0" status="always"/>
          </accessGuards>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_CC_FIELD_LOCK_WRITE">
    <locations>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" method="commit" offset="17" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;JLbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;J)Z" key="0" filename="WaitFreeQueue.java" line="99"/>
      <method className="benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node" name="commit" desc="(Lbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;JLbenchmarks/EDU/oswego/cs/dl/util/concurrent/WaitFreeQueue$Node;J)Z" key="1" label="Lock acquired" filename="WaitFreeQueue.java" line="94"/>
    </locations>
    <info>
      <message value="Field 'next' re-assigned while holding an intrinsic lock on its value."/>
    </info>
  </finding>
  <finding type="CCE_CC_FIELD_LOCK_WRITE">
    <locations>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="insert" offset="21" desc="(Ljava/lang/Object;)V" key="0" filename="LinkedQueue.java" line="70"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="insert" offset="14" desc="(Ljava/lang/Object;)V" key="1" label="Lock acquired" filename="LinkedQueue.java" line="68"/>
    </locations>
    <info>
      <message value="Field 'last_' re-assigned while holding an intrinsic lock on its value."/>
    </info>
  </finding>
  <finding type="CCE_CC_FIELD_LOCK_WRITE">
    <locations>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="insert" offset="22" desc="(Ljava/lang/Object;)V" key="0" filename="BoundedLinkedQueue.java" line="276"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="insert" offset="15" desc="(Ljava/lang/Object;)V" key="1" label="Lock acquired" filename="BoundedLinkedQueue.java" line="274"/>
    </locations>
    <info>
      <message value="Field 'last_' re-assigned while holding an intrinsic lock on its value."/>
    </info>
  </finding>
  <finding type="CCE_CC_FIELD_LOCK_WRITE">
    <locations>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="extract" offset="21" desc="()Ljava/lang/Object;" key="0" filename="LinkedQueue.java" line="85"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.LinkedQueue" method="extract" offset="4" desc="()Ljava/lang/Object;" key="1" label="Lock acquired" filename="LinkedQueue.java" line="79"/>
    </locations>
    <info>
      <message value="Field 'head_' re-assigned while holding an intrinsic lock on its value."/>
    </info>
  </finding>
  <finding type="CCE_CC_FIELD_LOCK_WRITE">
    <locations>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="extract" offset="21" desc="()Ljava/lang/Object;" key="0" filename="BoundedLinkedQueue.java" line="186"/>
      <instruction className="benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue" method="extract" offset="4" desc="()Ljava/lang/Object;" key="1" label="Lock acquired" filename="BoundedLinkedQueue.java" line="180"/>
    </locations>
    <info>
      <message value="Field 'head_' re-assigned while holding an intrinsic lock on its value."/>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="TournamentBarrier" name="IsDone" type="[Z" key="0" filename="TournamentBarrier.java" line="92"/>
      <instruction className="TournamentBarrier" method="&lt;init&gt;" offset="15" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="TournamentBarrier.java" line="38"/>
      <instruction className="TournamentBarrier" method="DoBarrier" offset="3" desc="(I)V" key="2" label="relevant_unsync_read" filename="TournamentBarrier.java" line="57"/>
      <instruction className="TournamentBarrier" method="DoBarrier" offset="33" desc="(I)V" key="3" label="relevant_unsync_read" filename="TournamentBarrier.java" line="64"/>
      <instruction className="TournamentBarrier" method="DoBarrier" offset="71" desc="(I)V" key="4" label="relevant_unsync_read" filename="TournamentBarrier.java" line="75"/>
      <instruction className="TournamentBarrier" method="DoBarrier" offset="87" desc="(I)V" key="5" label="relevant_unsync_read" filename="TournamentBarrier.java" line="77"/>
      <instruction className="TournamentBarrier" method="&lt;init&gt;" offset="10" desc="(I)V" key="6" label="irrelevant_unsync_write" filename="TournamentBarrier.java" line="36"/>
    </locations>
    <info>
      <message value="Volatile field 'IsDone' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.instrumented.java15.util.AbstractMap" name="values" type="Lbenchmarks/instrumented/java15/util/Collection;" key="0" filename="AbstractMap.java" line="346"/>
      <instruction className="benchmarks.instrumented.java15.util.AbstractMap" method="&lt;init&gt;" offset="7" desc="()V" key="1" label="irrelevant_unsync_write" filename="AbstractMap.java" line="346"/>
    </locations>
    <info>
      <message value="Volatile field 'values' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="lufact.Barrier" name="numThreads" type="I" key="0" filename="Barrier.java" line="38"/>
      <instruction className="lufact.TournamentBarrier" method="&lt;init&gt;" offset="8" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="TournamentBarrier.java" line="37"/>
      <instruction className="lufact.TournamentBarrier" method="DoBarrier" offset="66" desc="(I)V" key="2" label="relevant_unsync_read" filename="TournamentBarrier.java" line="60"/>
      <instruction className="lufact.TournamentBarrier" method="DoBarrier" offset="52" desc="(I)V" key="3" label="relevant_unsync_read" filename="TournamentBarrier.java" line="62"/>
      <instruction className="lufact.Barrier" method="&lt;init&gt;" offset="4" desc="(I)V" key="4" label="irrelevant_unsync_write" filename="Barrier.java" line="29"/>
    </locations>
    <info>
      <message value="Volatile field 'numThreads' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.instrumented.java.util.AbstractMap" name="values" type="Lbenchmarks/instrumented/java/util/Collection;" key="0" filename="AbstractMap.java" line="343"/>
      <instruction className="benchmarks.instrumented.java.util.AbstractMap" method="&lt;init&gt;" offset="7" desc="()V" key="1" label="irrelevant_unsync_write" filename="AbstractMap.java" line="343"/>
    </locations>
    <info>
      <message value="Volatile field 'values' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.instrumented.java15.util.AbstractMap" name="keySet" type="Lbenchmarks/instrumented/java15/util/Set;" key="0" filename="AbstractMap.java" line="345"/>
      <instruction className="benchmarks.instrumented.java15.util.AbstractMap" method="&lt;init&gt;" offset="4" desc="()V" key="1" label="irrelevant_unsync_write" filename="AbstractMap.java" line="345"/>
    </locations>
    <info>
      <message value="Volatile field 'keySet' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.instrumented.java15.util.Random" name="seedUniquifier" type="J" key="0" filename="Random.java" line="72"/>
      <instruction className="benchmarks.instrumented.java15.util.Random" method="&lt;init&gt;" offset="1" desc="()V" key="1" label="relevant_unsync_read" filename="Random.java" line="69"/>
      <instruction className="benchmarks.instrumented.java15.util.Random" method="&lt;init&gt;" offset="5" desc="()V" key="2" label="relevant_unsync_write" filename="Random.java" line="69"/>
      <instruction className="benchmarks.instrumented.java15.util.Random" method="&lt;clinit&gt;" offset="1" desc="()V" key="3" label="irrelevant_unsync_write" filename="Random.java" line="72"/>
    </locations>
    <info>
      <message value="Volatile static field 'seedUniquifier' is only written during class initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_write">
          <accessGuards/>
        </access>
        <access location="3" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.raytracer.Barrier" name="numThreads" type="I" key="0" filename="Barrier.java" line="38"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="&lt;init&gt;" offset="8" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="TournamentBarrier.java" line="37"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="DoBarrier" offset="66" desc="(I)V" key="2" label="relevant_unsync_read" filename="TournamentBarrier.java" line="60"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="DoBarrier" offset="52" desc="(I)V" key="3" label="relevant_unsync_read" filename="TournamentBarrier.java" line="62"/>
      <instruction className="benchmarks.raytracer.Barrier" method="&lt;init&gt;" offset="4" desc="(I)V" key="4" label="irrelevant_unsync_write" filename="Barrier.java" line="29"/>
    </locations>
    <info>
      <message value="Volatile field 'numThreads' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="lufact.TournamentBarrier" name="IsDone" type="[Z" key="0" filename="TournamentBarrier.java" line="93"/>
      <instruction className="lufact.TournamentBarrier" method="&lt;init&gt;" offset="15" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="TournamentBarrier.java" line="39"/>
      <instruction className="lufact.TournamentBarrier" method="DoBarrier" offset="3" desc="(I)V" key="2" label="relevant_unsync_read" filename="TournamentBarrier.java" line="58"/>
      <instruction className="lufact.TournamentBarrier" method="DoBarrier" offset="33" desc="(I)V" key="3" label="relevant_unsync_read" filename="TournamentBarrier.java" line="65"/>
      <instruction className="lufact.TournamentBarrier" method="DoBarrier" offset="71" desc="(I)V" key="4" label="relevant_unsync_read" filename="TournamentBarrier.java" line="76"/>
      <instruction className="lufact.TournamentBarrier" method="DoBarrier" offset="87" desc="(I)V" key="5" label="relevant_unsync_read" filename="TournamentBarrier.java" line="78"/>
      <instruction className="lufact.TournamentBarrier" method="&lt;init&gt;" offset="10" desc="(I)V" key="6" label="irrelevant_unsync_write" filename="TournamentBarrier.java" line="37"/>
    </locations>
    <info>
      <message value="Volatile field 'IsDone' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.moldyn.TournamentBarrier" name="IsDone" type="[Z" key="0" filename="TournamentBarrier.java" line="93"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="&lt;init&gt;" offset="15" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="TournamentBarrier.java" line="39"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="DoBarrier" offset="3" desc="(I)V" key="2" label="relevant_unsync_read" filename="TournamentBarrier.java" line="58"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="DoBarrier" offset="33" desc="(I)V" key="3" label="relevant_unsync_read" filename="TournamentBarrier.java" line="65"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="DoBarrier" offset="71" desc="(I)V" key="4" label="relevant_unsync_read" filename="TournamentBarrier.java" line="76"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="DoBarrier" offset="87" desc="(I)V" key="5" label="relevant_unsync_read" filename="TournamentBarrier.java" line="78"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="&lt;init&gt;" offset="10" desc="(I)V" key="6" label="irrelevant_unsync_write" filename="TournamentBarrier.java" line="37"/>
    </locations>
    <info>
      <message value="Volatile field 'IsDone' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="sor.SORRunner" name="sync" type="[[J" key="0" filename="SOR.java" line="95"/>
      <instruction className="sor.SORRunner" method="run" offset="303" desc="()V" key="1" label="relevant_unsync_read" filename="SOR.java" line="176"/>
      <instruction className="sor.SORRunner" method="run" offset="317" desc="()V" key="2" label="relevant_unsync_read" filename="SOR.java" line="180"/>
      <instruction className="sor.SORRunner" method="run" offset="341" desc="()V" key="3" label="relevant_unsync_read" filename="SOR.java" line="183"/>
      <instruction className="sor.SORRunner" method="&lt;init&gt;" offset="16" desc="(ID[[DI[[J)V" key="4" label="irrelevant_unsync_write" filename="SOR.java" line="102"/>
    </locations>
    <info>
      <message value="Volatile field 'sync' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.instrumented.java.util.AbstractMap" name="keySet" type="Lbenchmarks/instrumented/java/util/Set;" key="0" filename="AbstractMap.java" line="342"/>
      <instruction className="benchmarks.instrumented.java.util.AbstractMap" method="&lt;init&gt;" offset="4" desc="()V" key="1" label="irrelevant_unsync_write" filename="AbstractMap.java" line="342"/>
    </locations>
    <info>
      <message value="Volatile field 'keySet' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.raytracer.TournamentBarrier" name="IsDone" type="[Z" key="0" filename="TournamentBarrier.java" line="94"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="&lt;init&gt;" offset="15" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="TournamentBarrier.java" line="39"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="DoBarrier" offset="3" desc="(I)V" key="2" label="relevant_unsync_read" filename="TournamentBarrier.java" line="58"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="DoBarrier" offset="33" desc="(I)V" key="3" label="relevant_unsync_read" filename="TournamentBarrier.java" line="65"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="DoBarrier" offset="71" desc="(I)V" key="4" label="relevant_unsync_read" filename="TournamentBarrier.java" line="76"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="DoBarrier" offset="87" desc="(I)V" key="5" label="relevant_unsync_read" filename="TournamentBarrier.java" line="78"/>
      <instruction className="benchmarks.raytracer.TournamentBarrier" method="&lt;init&gt;" offset="10" desc="(I)V" key="6" label="irrelevant_unsync_write" filename="TournamentBarrier.java" line="37"/>
    </locations>
    <info>
      <message value="Volatile field 'IsDone' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="5" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="6" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_FF_VOLATILE">
    <locations>
      <field className="benchmarks.moldyn.Barrier" name="numThreads" type="I" key="0" filename="Barrier.java" line="38"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="&lt;init&gt;" offset="8" desc="(I)V" key="1" label="irrelevant_unsync_read" filename="TournamentBarrier.java" line="37"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="DoBarrier" offset="66" desc="(I)V" key="2" label="relevant_unsync_read" filename="TournamentBarrier.java" line="60"/>
      <instruction className="benchmarks.moldyn.TournamentBarrier" method="DoBarrier" offset="52" desc="(I)V" key="3" label="relevant_unsync_read" filename="TournamentBarrier.java" line="62"/>
      <instruction className="benchmarks.moldyn.Barrier" method="&lt;init&gt;" offset="4" desc="(I)V" key="4" label="irrelevant_unsync_write" filename="Barrier.java" line="29"/>
    </locations>
    <info>
      <message value="Volatile field 'numThreads' is only written during object initialization."/>
      <guards/>
      <accesses>
        <access location="1" type="irrelevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="2" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="3" type="relevant_unsync_read">
          <accessGuards/>
        </access>
        <access location="4" type="irrelevant_unsync_write">
          <accessGuards/>
        </access>
      </accesses>
    </info>
  </finding>
  <finding type="CCE_DL_DEADLOCK">
    <locations>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.RWPrinter" method="beforeRead" offset="8" desc="()V" key="0" label="Acquisition of 'RWPrinter.this' (holding 'waitingReaderMonitor_')" filename="RWVSNTest.java" line="90"/>
      <instruction className="benchmarks.jpf_test_cases.readerswriters.RWPrinter" method="notifyReaders" offset="4" desc="()V" key="1" label="Acquisition of 'waitingReaderMonitor_' (holding 'RWPrinter.this')" filename="RWVSNTest.java" line="118"/>
    </locations>
    <info>
      <message value="Deadlock due to cyclic dependencies between the locks 'RWPrinter.this' and 'waitingReaderMonitor_'."/>
    </info>
  </finding>
</findings>